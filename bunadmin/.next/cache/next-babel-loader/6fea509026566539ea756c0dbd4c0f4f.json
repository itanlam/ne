{"ast":null,"code":"var _jsxFileName = \"/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/core/menu/columns.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport ParentSelect from \"./components/ParentSelect\";\nimport { Button, Tooltip } from \"@material-ui/core\";\nexport const Columns = ({\n  t\n}) => [{\n  title: t(\"Id\"),\n  field: \"id\",\n  editable: \"onAdd\"\n}, {\n  title: t(\"Name\"),\n  field: \"name\"\n}, {\n  title: t(\"Label\"),\n  field: \"label\"\n}, {\n  title: t(\"Slug\"),\n  field: \"slug\"\n}, {\n  title: t(\"Icon\"),\n  field: \"icon\",\n  render: r => r && r.icon ? __jsx(Tooltip, {\n    title: r.icon,\n    placement: \"top\",\n    arrow: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }, r.icon.substr(0, 5), \"...\")) : null\n}, {\n  title: t(\"Icon Type\"),\n  field: \"icon_type\",\n  lookup: {\n    eva: \"Eva Icon\",\n    material: \"Material Icon\",\n    url: \"Url Address\"\n  }\n}, {\n  title: t(\"Parent\"),\n  field: \"parent\",\n  initialEditValue: \"\",\n  defaultGroupOrder: 0,\n  editComponent: props => __jsx(ParentSelect, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  }))\n}, {\n  title: t(\"Parent\"),\n  field: \"parent\",\n  initialEditValue: \"\",\n  editComponent: props => __jsx(ParentSelect, _extends({}, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }))\n}, {\n  title: t(\"Rank\"),\n  field: \"rank\",\n  type: \"numeric\",\n  initialEditValue: \"0\"\n}];","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/core/menu/columns.tsx"],"names":["React","ParentSelect","Button","Tooltip","Columns","t","title","field","editable","render","r","icon","substr","lookup","eva","material","url","initialEditValue","defaultGroupOrder","editComponent","props","type"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,mBAAhC;AAEA,OAAO,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgC,CACrD;AAAEC,EAAAA,KAAK,EAAED,CAAC,CAAC,IAAD,CAAV;AAAkBE,EAAAA,KAAK,EAAE,IAAzB;AAA+BC,EAAAA,QAAQ,EAAE;AAAzC,CADqD,EAErD;AAAEF,EAAAA,KAAK,EAAED,CAAC,CAAC,MAAD,CAAV;AAAoBE,EAAAA,KAAK,EAAE;AAA3B,CAFqD,EAGrD;AAAED,EAAAA,KAAK,EAAED,CAAC,CAAC,OAAD,CAAV;AAAqBE,EAAAA,KAAK,EAAE;AAA5B,CAHqD,EAIrD;AAAED,EAAAA,KAAK,EAAED,CAAC,CAAC,MAAD,CAAV;AAAoBE,EAAAA,KAAK,EAAE;AAA3B,CAJqD,EAKrD;AACED,EAAAA,KAAK,EAAED,CAAC,CAAC,MAAD,CADV;AAEEE,EAAAA,KAAK,EAAE,MAFT;AAGEE,EAAAA,MAAM,EAAEC,CAAC,IACPA,CAAC,IAAIA,CAAC,CAACC,IAAP,GACE,MAAC,OAAD;AAAS,IAAA,KAAK,EAAED,CAAC,CAACC,IAAlB;AAAwB,IAAA,SAAS,EAAC,KAAlC;AAAwC,IAAA,KAAK,MAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASD,CAAC,CAACC,IAAF,CAAOC,MAAP,CAAc,CAAd,EAAiB,CAAjB,CAAT,QADF,CADF,GAII;AARR,CALqD,EAerD;AACEN,EAAAA,KAAK,EAAED,CAAC,CAAC,WAAD,CADV;AAEEE,EAAAA,KAAK,EAAE,WAFT;AAGEM,EAAAA,MAAM,EAAE;AAAEC,IAAAA,GAAG,EAAE,UAAP;AAAmBC,IAAAA,QAAQ,EAAE,eAA7B;AAA8CC,IAAAA,GAAG,EAAE;AAAnD;AAHV,CAfqD,EAoBrD;AACEV,EAAAA,KAAK,EAAED,CAAC,CAAC,QAAD,CADV;AAEEE,EAAAA,KAAK,EAAE,QAFT;AAGEU,EAAAA,gBAAgB,EAAE,EAHpB;AAIEC,EAAAA,iBAAiB,EAAE,CAJrB;AAKEC,EAAAA,aAAa,EAAEC,KAAK,IAAI,MAAC,YAAD,eAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAL1B,CApBqD,EA2BrD;AACEd,EAAAA,KAAK,EAAED,CAAC,CAAC,QAAD,CADV;AAEEE,EAAAA,KAAK,EAAE,QAFT;AAGEU,EAAAA,gBAAgB,EAAE,EAHpB;AAIEE,EAAAA,aAAa,EAAEC,KAAK,IAAI,MAAC,YAAD,eAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJ1B,CA3BqD,EAiCrD;AAAEd,EAAAA,KAAK,EAAED,CAAC,CAAC,MAAD,CAAV;AAAoBE,EAAAA,KAAK,EAAE,MAA3B;AAAmCc,EAAAA,IAAI,EAAE,SAAzC;AAAoDJ,EAAAA,gBAAgB,EAAE;AAAtE,CAjCqD,CAAhD","sourcesContent":["import React from \"react\"\nimport { Column } from \"material-table\"\nimport { Type } from \"./types\"\nimport ParentSelect from \"./components/ParentSelect\"\nimport { Button, Tooltip } from \"@material-ui/core\"\n\nexport const Columns = ({ t }: any): Column<Type>[] => [\n  { title: t(\"Id\"), field: \"id\", editable: \"onAdd\" },\n  { title: t(\"Name\"), field: \"name\" },\n  { title: t(\"Label\"), field: \"label\" },\n  { title: t(\"Slug\"), field: \"slug\" },\n  {\n    title: t(\"Icon\"),\n    field: \"icon\",\n    render: r =>\n      r && r.icon ? (\n        <Tooltip title={r.icon} placement=\"top\" arrow>\n          <Button>{r.icon.substr(0, 5)}...</Button>\n        </Tooltip>\n      ) : null\n  },\n  {\n    title: t(\"Icon Type\"),\n    field: \"icon_type\",\n    lookup: { eva: \"Eva Icon\", material: \"Material Icon\", url: \"Url Address\" }\n  },\n  {\n    title: t(\"Parent\"),\n    field: \"parent\",\n    initialEditValue: \"\",\n    defaultGroupOrder: 0,\n    editComponent: props => <ParentSelect {...props} />\n  },\n  {\n    title: t(\"Parent\"),\n    field: \"parent\",\n    initialEditValue: \"\",\n    editComponent: props => <ParentSelect {...props} />\n  },\n  { title: t(\"Rank\"), field: \"rank\", type: \"numeric\", initialEditValue: \"0\" }\n]\n"]},"metadata":{},"sourceType":"module"}