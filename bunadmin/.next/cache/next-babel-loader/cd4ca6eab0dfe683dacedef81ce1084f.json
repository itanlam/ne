{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/**\n * Remote data controller\n */\nimport request from \"@/utils/scripts/request\";\nimport storedToken from \"@/utils/scripts/storedToken\";\nimport { ENV } from \"@/utils/config\";\nexport default function listSer(_x) {\n  return _listSer.apply(this, arguments);\n}\n\nfunction _listSer() {\n  _listSer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(query) {\n    var page, pageSize, token;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = query.page, pageSize = query.pageSize;\n            _context.next = 3;\n            return storedToken();\n\n          case 3:\n            token = _context.sent;\n            return _context.abrupt(\"return\", request(\"/user\", {\n              params: {\n                page: page + 1,\n                pageSize: pageSize\n              },\n              prefix: ENV.AUTH_URL,\n              method: \"GET\",\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            }));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _listSer.apply(this, arguments);\n}","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/plugins/buncms-user/list/services/listSer.tsx"],"names":["request","storedToken","ENV","listSer","query","page","pageSize","token","params","prefix","AUTH_URL","method","headers","Authorization"],"mappings":";;;AAAA;;;AAIA,OAAOA,OAAP,MAAoB,yBAApB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,GAAT,QAAoB,gBAApB;AAEA,wBAA8BC,OAA9B;AAAA;AAAA;;;sEAAe,iBAAuBC,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AACLC,YAAAA,IADK,GACcD,KADd,CACLC,IADK,EACCC,QADD,GACcF,KADd,CACCE,QADD;AAAA;AAAA,mBAEOL,WAAW,EAFlB;;AAAA;AAEPM,YAAAA,KAFO;AAAA,6CAINP,OAAO,CAAC,OAAD,EAAU;AACtBQ,cAAAA,MAAM,EAAE;AAAEH,gBAAAA,IAAI,EAAEA,IAAI,GAAG,CAAf;AAAkBC,gBAAAA,QAAQ,EAARA;AAAlB,eADc;AAEtBG,cAAAA,MAAM,EAAEP,GAAG,CAACQ,QAFU;AAGtBC,cAAAA,MAAM,EAAE,KAHc;AAItBC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,mBAAYN,KAAZ;AADN;AAJa,aAAV,CAJD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["/**\n * Remote data controller\n */\nimport { Query } from \"material-table\"\nimport request from \"@/utils/scripts/request\"\nimport storedToken from \"@/utils/scripts/storedToken\"\nimport { ENV } from \"@/utils/config\"\n\nexport default async function listSer(query: Query<any>) {\n  const { page, pageSize } = query\n  const token = await storedToken()\n\n  return request(\"/user\", {\n    params: { page: page + 1, pageSize },\n    prefix: ENV.AUTH_URL,\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}