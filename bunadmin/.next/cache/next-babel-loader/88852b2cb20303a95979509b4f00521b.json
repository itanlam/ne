{"ast":null,"code":"var _jsxFileName = \"/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/layouts/DefaultLayout/TopBar/TopBarRightMenu/SettingMenu.tsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport RxDB from \"rxdb\";\nimport { useRouter } from \"next/router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport EvaIcon from \"react-eva-icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport ConfirmDialog from \"@/components/CommonDialog/ConfirmDialog\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { settingMenus } from \"@/utils/config/settingMenus\";\nimport { DynamicRoute } from \"@/utils/routes\";\nimport { useTranslation } from \"react-i18next\";\nexport default function SettingMenu() {\n  const {\n    t\n  } = useTranslation();\n  const theme = useTheme();\n  const router = useRouter();\n  const {\n    group: qGroup,\n    name: qName\n  } = router.query;\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const {\n    0: modalState,\n    1: setModalState\n  } = useState({\n    open: 0,\n    title: \"\",\n    msg: \"\"\n  });\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = ({\n    route\n  }) => {\n    setAnchorEl(null);\n    if (!route) return;\n    router.push(DynamicRoute, route).then(_r => {});\n  };\n\n  const handleClearDb = () => {\n    setAnchorEl(null);\n    setModalState({\n      title: \"Delete Local Database\",\n      open: modalState.open + 1,\n      msg: \"Do want to delete the local database?\"\n    });\n  };\n\n  return (// Setting Icon\n    __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, __jsx(IconButton, {\n      \"aria-label\": \"account of current user\",\n      \"aria-controls\": \"menu-appbar\",\n      \"aria-haspopup\": \"true\",\n      onClick: handleMenu,\n      color: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, __jsx(EvaIcon, {\n      name: \"settings-outline\",\n      size: \"large\",\n      fill: theme.bunadmin.iconColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    })), __jsx(Menu, {\n      id: \"menu-appbar\",\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      keepMounted: true,\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      open: open,\n      onClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, settingMenus({\n      theme\n    }).map((item, index) => __jsx(MenuItem, {\n      key: index,\n      selected: item.route === `/${qGroup}/${qName}`,\n      onClick: () => handleClose({\n        route: item.route\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, t(item.name))), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), __jsx(MenuItem, {\n      onClick: () => handleClearDb(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, t(\"Reset Local Database\"))), __jsx(ConfirmDialog, {\n      openModal: modalState.open,\n      title: modalState.title,\n      msg: modalState.msg,\n      doFunc: () => {\n        RxDB.removeDatabase(\"bunadmin\", \"idb\").then(_r => location.reload());\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }))\n  );\n}","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/layouts/DefaultLayout/TopBar/TopBarRightMenu/SettingMenu.tsx"],"names":["React","useState","RxDB","useRouter","IconButton","MenuItem","Menu","EvaIcon","useTheme","ConfirmDialog","Divider","settingMenus","DynamicRoute","useTranslation","SettingMenu","t","theme","router","group","qGroup","name","qName","query","anchorEl","setAnchorEl","open","Boolean","modalState","setModalState","title","msg","handleMenu","event","currentTarget","handleClose","route","push","then","_r","handleClearDb","bunadmin","iconColor","vertical","horizontal","map","item","index","removeDatabase","location","reload"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport RxDB from \"rxdb\"\n\nimport { useRouter } from \"next/router\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport Menu from \"@material-ui/core/Menu\"\nimport EvaIcon from \"react-eva-icons\"\nimport { useTheme } from \"@material-ui/core/styles\"\nimport ConfirmDialog from \"@/components/CommonDialog/ConfirmDialog\"\nimport Divider from \"@material-ui/core/Divider\"\nimport { settingMenus } from \"@/utils/config/settingMenus\"\nimport { DynamicRoute } from \"@/utils/routes\"\nimport { useTranslation } from \"react-i18next\"\n\nexport default function SettingMenu() {\n  const { t } = useTranslation()\n  const theme = useTheme()\n  const router = useRouter()\n  const { group: qGroup, name: qName } = router.query\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n  const open = Boolean(anchorEl)\n  const [modalState, setModalState] = useState({\n    open: 0,\n    title: \"\",\n    msg: \"\"\n  })\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = ({ route }: { route: string }) => {\n    setAnchorEl(null)\n    if (!route) return\n    router.push(DynamicRoute, route).then(_r => {})\n  }\n\n  const handleClearDb = () => {\n    setAnchorEl(null)\n    setModalState({\n      title: \"Delete Local Database\",\n      open: modalState.open + 1,\n      msg: \"Do want to delete the local database?\"\n    })\n  }\n\n  return (\n    // Setting Icon\n    <div>\n      <IconButton\n        aria-label=\"account of current user\"\n        aria-controls=\"menu-appbar\"\n        aria-haspopup=\"true\"\n        onClick={handleMenu}\n        color=\"inherit\"\n      >\n        <EvaIcon\n          name=\"settings-outline\"\n          size=\"large\"\n          fill={theme.bunadmin.iconColor}\n        />\n      </IconButton>\n      <Menu\n        id=\"menu-appbar\"\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        keepMounted\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        open={open}\n        onClose={handleClose}\n      >\n        {settingMenus({ theme }).map((item, index) => (\n          <MenuItem\n            key={index}\n            selected={item.route === `/${qGroup}/${qName}`}\n            onClick={() => handleClose({ route: item.route })}\n          >\n            {t(item.name)}\n          </MenuItem>\n        ))}\n        {/* ClearDb */}\n        <Divider />\n        <MenuItem onClick={() => handleClearDb()}>\n          {t(\"Reset Local Database\")}\n        </MenuItem>\n      </Menu>\n      {/* ConfirmDialog */}\n      <ConfirmDialog\n        openModal={modalState.open}\n        title={modalState.title}\n        msg={modalState.msg}\n        doFunc={() => {\n          RxDB.removeDatabase(\"bunadmin\", \"idb\").then(_r => location.reload())\n        }}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}