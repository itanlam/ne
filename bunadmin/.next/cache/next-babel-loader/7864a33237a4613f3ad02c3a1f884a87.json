{"ast":null,"code":"var _jsxFileName = \"/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/components/CommonDialog/ConfirmDialog.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { Translation } from \"react-i18next\";\nexport default function ConfirmDialog({\n  openModal,\n  title,\n  msg,\n  doFunc,\n  disagree,\n  agree\n}) {\n  const [open, setOpen] = React.useState(false);\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  useEffect(() => {\n    if (openModal < 1) return;\n    setOpen(true);\n  }, [openModal]);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleAgree = () => {\n    doFunc();\n    handleClose();\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, __jsx(Dialog, {\n    fullScreen: fullScreen,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, __jsx(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, title), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, msg)), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, disagree || __jsx(Translation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 26\n    }\n  }, t => t(\"Disagree\"))), __jsx(Button, {\n    onClick: handleAgree,\n    color: \"primary\",\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, agree || __jsx(Translation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }\n  }, t => t(\"Agree\"))))));\n}","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/components/CommonDialog/ConfirmDialog.tsx"],"names":["React","useEffect","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","Translation","ConfirmDialog","openModal","title","msg","doFunc","disagree","agree","open","setOpen","useState","theme","fullScreen","breakpoints","down","handleClose","handleAgree","t"],"mappings":";;AAAA,OAAOA,KAAP,IAA8BC,SAA9B,QAA+C,OAA/C;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAWA,eAAe,SAASC,aAAT,CAAuB;AACpCC,EAAAA,SADoC;AAEpCC,EAAAA,KAFoC;AAGpCC,EAAAA,GAHoC;AAIpCC,EAAAA,MAJoC;AAKpCC,EAAAA,QALoC;AAMpCC,EAAAA;AANoC,CAAvB,EAOD;AACZ,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBnB,KAAK,CAACoB,QAAN,CAAe,KAAf,CAAxB;AACA,QAAMC,KAAK,GAAGZ,QAAQ,EAAtB;AACA,QAAMa,UAAU,GAAGd,aAAa,CAACa,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAAhC;AAEAvB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,SAAS,GAAG,CAAhB,EAAmB;AACnBO,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAHQ,EAGN,CAACP,SAAD,CAHM,CAAT;;AAKA,QAAMa,WAAW,GAAG,MAAM;AACxBN,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMO,WAAW,GAAG,MAAM;AACxBX,IAAAA,MAAM;AACNU,IAAAA,WAAW;AACZ,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,UAAU,EAAEH,UADd;AAEE,IAAA,IAAI,EAAEJ,IAFR;AAGE,IAAA,OAAO,EAAEO,WAHX;AAIE,uBAAgB,yBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,WAAD;AAAa,IAAA,EAAE,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CZ,KAA3C,CANF,EAOE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBC,GAApB,CADF,CAPF,EAUE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,SAAS,MAAjB;AAAkB,IAAA,OAAO,EAAEW,WAA3B;AAAwC,IAAA,KAAK,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,QAAQ,IAAI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcW,CAAC,IAAIA,CAAC,CAAC,UAAD,CAApB,CADf,CADF,EAIE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAED,WAAjB;AAA8B,IAAA,KAAK,EAAC,SAApC;AAA8C,IAAA,SAAS,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,IAAI,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcU,CAAC,IAAIA,CAAC,CAAC,OAAD,CAApB,CADZ,CAJF,CAVF,CADF,CADF;AAuBD","sourcesContent":["import React, { ReactElement, useEffect } from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\"\nimport { useTheme } from \"@material-ui/core/styles\"\nimport { Translation } from \"react-i18next\"\n\ninterface Interface {\n  openModal: number\n  title?: string | ReactElement\n  msg?: string | ReactElement\n  doFunc: () => void\n  disagree?: string | ReactElement\n  agree?: string | ReactElement\n}\n\nexport default function ConfirmDialog({\n  openModal,\n  title,\n  msg,\n  doFunc,\n  disagree,\n  agree\n}: Interface) {\n  const [open, setOpen] = React.useState(false)\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"))\n\n  useEffect(() => {\n    if (openModal < 1) return\n    setOpen(true)\n  }, [openModal])\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleAgree = () => {\n    doFunc()\n    handleClose()\n  }\n\n  return (\n    <div>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{msg}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            {disagree || <Translation>{t => t(\"Disagree\")}</Translation>}\n          </Button>\n          <Button onClick={handleAgree} color=\"primary\" autoFocus>\n            {agree || <Translation>{t => t(\"Agree\")}</Translation>}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}