{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/**\n * Remote data controller\n */\nimport request from \"@/utils/scripts/request\";\nimport storedToken from \"@/utils/scripts/storedToken\";\nimport { ENV } from \"@/utils/config\";\nexport default function filtersQuery(_x) {\n  return _filtersQuery.apply(this, arguments);\n}\n\nfunction _filtersQuery() {\n  _filtersQuery = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref) {\n    var SchemaName, filters, token, params;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            SchemaName = _ref.SchemaName, filters = _ref.filters;\n            _context.next = 3;\n            return storedToken();\n\n          case 3:\n            token = _context.sent;\n            params = _objectSpread(_objectSpread({}, filters), {}, {\n              _sort: \"created_at:DESC\",\n              _limit: 30,\n              _start: 0\n            });\n            _context.next = 7;\n            return request(\"/content-manager/explorer/application::\".concat(SchemaName, \".\").concat(SchemaName), {\n              params: params,\n              prefix: ENV.AUTH_URL,\n              method: \"GET\",\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            });\n\n          case 7:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _filtersQuery.apply(this, arguments);\n}","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/plugins/data-source-strapi/services/filtersQuery.tsx"],"names":["request","storedToken","ENV","filtersQuery","SchemaName","filters","token","params","_sort","_limit","_start","prefix","AUTH_URL","method","headers","Authorization"],"mappings":";;;;;;;;AAAA;;;AAGA,OAAOA,OAAP,MAAoB,yBAApB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,GAAT,QAAoB,gBAApB;AAEA,wBAA8BC,YAA9B;AAAA;AAAA;;;2EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,YAAAA,UADa,QACbA,UADa,EAEbC,OAFa,QAEbA,OAFa;AAAA;AAAA,mBAOOJ,WAAW,EAPlB;;AAAA;AAOPK,YAAAA,KAPO;AASPC,YAAAA,MATO,mCAURF,OAVQ;AAWXG,cAAAA,KAAK,EAAE,iBAXI;AAYXC,cAAAA,MAAM,EAAE,EAZG;AAaXC,cAAAA,MAAM,EAAE;AAbG;AAAA;AAAA,mBAgBAV,OAAO,kDACwBI,UADxB,cACsCA,UADtC,GAElB;AACEG,cAAAA,MAAM,EAANA,MADF;AAEEI,cAAAA,MAAM,EAAET,GAAG,CAACU,QAFd;AAGEC,cAAAA,MAAM,EAAE,KAHV;AAIEC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,mBAAYT,KAAZ;AADN;AAJX,aAFkB,CAhBP;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["/**\n * Remote data controller\n */\nimport request from \"@/utils/scripts/request\"\nimport storedToken from \"@/utils/scripts/storedToken\"\nimport { ENV } from \"@/utils/config\"\n\nexport default async function filtersQuery({\n  SchemaName,\n  filters\n}: {\n  SchemaName: string\n  filters?: any\n}) {\n  const token = await storedToken()\n\n  const params = {\n    ...filters,\n    _sort: \"created_at:DESC\",\n    _limit: 30,\n    _start: 0\n  }\n\n  return await request(\n    `/content-manager/explorer/application::${SchemaName}.${SchemaName}`,\n    {\n      params,\n      prefix: ENV.AUTH_URL,\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    }\n  )\n}\n"]},"metadata":{},"sourceType":"module"}