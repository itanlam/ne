{"ast":null,"code":"var _jsxFileName = \"/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/pages/_app.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useEffect } from \"react\";\nimport Head from \"next/head\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport defaultTheme from \"@/utils/themes/defaultTheme\";\nimport CommonSnackbar from \"@/components/CommonSnackbar\";\nimport { SnackbarProvider } from \"notistack\";\nimport SnackMessage from \"@/components/CommonSnackbar/Message\";\nimport \"@/utils/i18n\";\nimport { useTranslation } from \"react-i18next\";\nimport { Collection as Schema } from \"@/core/schema/collections\";\nimport rxDb from \"@/utils/database/rxConnect\";\nimport addResource from \"@/utils/scripts/addResource\";\nimport initData from \"@/utils/scripts/initData\";\nimport { Collection as Setting, SettingNames } from \"@/core/setting/collections\";\n\nconst App = ({\n  Component,\n  pageProps\n}) => {\n  const {\n    i18n\n  } = useTranslation();\n  useEffect(() => {\n    ;\n\n    (async () => {\n      // Init Data\n      await initData(); // Load setting i18n_code\n\n      const db = await rxDb();\n      const setting = db[Setting.name];\n      const resI18nCode = await setting.findOne({\n        name: {\n          $eq: SettingNames.i18n_code\n        }\n      }).exec();\n      if (resI18nCode) i18n.changeLanguage(resI18nCode.value).then(); // Add i18n resource\n\n      let pathObj;\n      db[Schema.name].find().exec().then(schemas => {\n        schemas.map(({\n          team,\n          group\n        }) => {\n          if (!pathObj) pathObj = {}; // continue when plugin path added\n\n          if (!pathObj[team + group]) {\n            pathObj[team + group] = true;\n            addResource({\n              i18n,\n              team,\n              group\n            });\n          }\n        });\n      });\n      const jssStyles = document.querySelector(\"#jss-server-side\");\n\n      if (jssStyles) {\n        // @ts-ignore\n        jssStyles.parentElement.removeChild(jssStyles);\n      }\n    })();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"My page\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), __jsx(\"link\", {\n    href: \"https://cdn.bootcss.com/material-design-icons/3.0.1/iconfont/material-icons.css\",\n    rel: \"stylesheet\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), __jsx(ThemeProvider, {\n    theme: defaultTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(CssBaseline, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), __jsx(SnackbarProvider, {\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"right\"\n    },\n    autoHideDuration: 2000,\n    content: (key, message) => __jsx(SnackMessage, {\n      id: key,\n      message: message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(CommonSnackbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })), __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/pages/_app.tsx"],"names":["React","useEffect","Head","ThemeProvider","CssBaseline","defaultTheme","CommonSnackbar","SnackbarProvider","SnackMessage","useTranslation","Collection","Schema","rxDb","addResource","initData","Setting","SettingNames","App","Component","pageProps","i18n","db","setting","name","resI18nCode","findOne","$eq","i18n_code","exec","changeLanguage","value","then","pathObj","find","schemas","map","team","group","jssStyles","document","querySelector","parentElement","removeChild","vertical","horizontal","key","message"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\"\nimport { AppProps } from \"next/app\"\nimport Head from \"next/head\"\nimport { ThemeProvider } from \"@material-ui/core/styles\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport defaultTheme from \"@/utils/themes/defaultTheme\"\nimport CommonSnackbar from \"@/components/CommonSnackbar\"\nimport { SnackbarProvider } from \"notistack\"\nimport SnackMessage from \"@/components/CommonSnackbar/Message\"\nimport \"@/utils/i18n\"\nimport { useTranslation } from \"react-i18next\"\nimport { Collection as Schema } from \"@/core/schema/collections\"\nimport rxDb from \"@/utils/database/rxConnect\"\nimport { Type as SchemaType } from \"@/core/schema/types\"\nimport addResource from \"@/utils/scripts/addResource\"\nimport initData from \"@/utils/scripts/initData\"\nimport { Collection as Setting, SettingNames } from \"@/core/setting/collections\"\n\nconst App = ({ Component, pageProps }: AppProps) => {\n  const { i18n } = useTranslation()\n\n  useEffect(() => {\n    ;(async () => {\n      // Init Data\n      await initData()\n\n      // Load setting i18n_code\n      const db = await rxDb()\n      const setting = db[Setting.name]\n      const resI18nCode = await setting\n        .findOne({ name: { $eq: SettingNames.i18n_code } })\n        .exec()\n      if (resI18nCode) i18n.changeLanguage(resI18nCode.value).then()\n\n      // Add i18n resource\n      let pathObj: any\n      db[Schema.name]\n        .find()\n        .exec()\n        .then((schemas: []) => {\n          schemas.map(({ team, group }: SchemaType) => {\n            if (!pathObj) pathObj = {}\n            // continue when plugin path added\n            if (!pathObj[team + group]) {\n              pathObj[team + group] = true\n              addResource({ i18n, team, group })\n            }\n          })\n        })\n\n      const jssStyles = document.querySelector(\"#jss-server-side\")\n      if (jssStyles) {\n        // @ts-ignore\n        jssStyles.parentElement.removeChild(jssStyles)\n      }\n    })()\n  }, [])\n\n  return (\n    <>\n      <Head>\n        <title>My page</title>\n        <meta\n          name=\"viewport\"\n          content=\"minimum-scale=1, initial-scale=1, width=device-width\"\n        />\n        <link\n          href=\"https://cdn.bootcss.com/material-design-icons/3.0.1/iconfont/material-icons.css\"\n          rel=\"stylesheet\"\n        />\n      </Head>\n      <ThemeProvider theme={defaultTheme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        {/* Snackbar / Notice */}\n        <SnackbarProvider\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\"\n          }}\n          autoHideDuration={2000}\n          content={(key, message) => (\n            <SnackMessage id={key} message={message} />\n          )}\n        >\n          <CommonSnackbar />\n        </SnackbarProvider>\n        {/* Core component */}\n        <Component {...pageProps} />\n      </ThemeProvider>\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}