{"ast":null,"code":"var _jsxFileName = \"/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/core/schema/components/EditColumns/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport dynamic from \"next/dynamic\"; // @ts-ignore\n\nimport JSONInput from \"react-json-editor-ajrm\"; // @ts-ignore\n\nimport locale from \"react-json-editor-ajrm/locale/en\";\nimport { DialogTitle } from \"./DialogTitle\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport jsonViewStyles from \"@/utils/styles/jsonViewStyles\";\nvar DynamicReactJson = dynamic(_c = function _c() {\n  return import(\"react-json-view\");\n}, {\n  ssr: false,\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak(\"react-json-view\")];\n    },\n    modules: [\"react-json-view\"]\n  }\n});\n_c2 = DynamicReactJson;\nexport default function EditColumns(props) {\n  _s();\n\n  var theme = useTheme();\n\n  var _useState = useState(false),\n      open = _useState[0],\n      setOpen = _useState[1];\n\n  var _useState2 = useState(\"tree\"),\n      mode = _useState2[0],\n      setMode = _useState2[1];\n\n  var jsonData = props.value ? JSON.parse(props.value) : [{\n    title: \"Id\",\n    field: \"id\"\n  }];\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var handleJson = function handleJson(data) {\n    props.onChange(JSON.stringify(data.updated_src));\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"primary\",\n    onClick: handleClickOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"config\"), __jsx(Dialog, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"form-dialog-title\",\n    fullWidth: true,\n    disableBackdropClick: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, __jsx(DialogTitle, {\n    id: \"customized-dialog-title\",\n    onClick: handleClose,\n    setMode: setMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Edit Columns\"), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, mode === \"tree\" && __jsx(DynamicReactJson, {\n    src: jsonData,\n    iconStyle: \"circle\",\n    collapseStringsAfterLength: 20,\n    onAdd: handleJson,\n    onEdit: handleJson,\n    onDelete: handleJson,\n    style: jsonViewStyles({\n      theme: theme\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }), mode === \"code\" && __jsx(JSONInput, {\n    theme: \"light_mitsuketa_tribute\",\n    placeholder: jsonData,\n    locale: locale,\n    onChange: function onChange(props) {\n      if (!props.jsObject) return;\n      handleJson({\n        updated_src: props.jsObject\n      });\n    },\n    style: {\n      outerBox: {\n        width: \"100%\"\n      },\n      container: {\n        width: \"100%\",\n        fontSize: 14\n      }\n    },\n    colors: {\n      background: \"rgba(143, 155, 179, 0.3)\",\n      \"default\": theme.palette.primary.light\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, \"Close\"))));\n}\n\n_s(EditColumns, \"lapf0mxg/4Mz4+G4B9JUGkXO+sA=\", false, function () {\n  return [useTheme];\n});\n\n_c3 = EditColumns;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"DynamicReactJson$dynamic\");\n$RefreshReg$(_c2, \"DynamicReactJson\");\n$RefreshReg$(_c3, \"EditColumns\");","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/core/schema/components/EditColumns/index.tsx"],"names":["React","useState","Button","Dialog","DialogActions","DialogContent","dynamic","JSONInput","locale","DialogTitle","useTheme","jsonViewStyles","DynamicReactJson","ssr","EditColumns","props","theme","open","setOpen","mode","setMode","jsonData","value","JSON","parse","title","field","handleClickOpen","handleClose","handleJson","data","onChange","stringify","updated_src","jsObject","outerBox","width","container","fontSize","background","palette","primary","light"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\n\nimport { EditComponentProps } from \"material-table\"\nimport { Type } from \"../../types\"\n\nimport dynamic from \"next/dynamic\"\n\n// @ts-ignore\nimport JSONInput from \"react-json-editor-ajrm\"\n// @ts-ignore\nimport locale from \"react-json-editor-ajrm/locale/en\"\n\nimport { DialogTitle } from \"./DialogTitle\"\nimport { useTheme } from \"@material-ui/core/styles\"\nimport jsonViewStyles from \"@/utils/styles/jsonViewStyles\"\n\nconst DynamicReactJson = dynamic(import(\"react-json-view\"), { ssr: false })\n\nexport default function EditColumns(props: EditComponentProps<Type>) {\n  const theme = useTheme()\n  const [open, setOpen] = useState(false)\n  const [mode, setMode] = useState(\"tree\")\n  const jsonData = props.value\n    ? JSON.parse(props.value)\n    : [{ title: \"Id\", field: \"id\" }]\n\n  const handleClickOpen = () => {\n    setOpen(true)\n  }\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleJson = (data: any) => {\n    props.onChange(JSON.stringify(data.updated_src))\n  }\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        config\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        fullWidth\n        disableBackdropClick\n      >\n        <DialogTitle\n          id=\"customized-dialog-title\"\n          onClick={handleClose}\n          setMode={setMode}\n        >\n          Edit Columns\n        </DialogTitle>\n        <DialogContent>\n          {mode === \"tree\" && (\n            <DynamicReactJson\n              src={jsonData}\n              iconStyle=\"circle\"\n              collapseStringsAfterLength={20}\n              onAdd={handleJson}\n              onEdit={handleJson}\n              onDelete={handleJson}\n              style={jsonViewStyles({ theme })}\n            />\n          )}\n          {mode === \"code\" && (\n            <JSONInput\n              theme=\"light_mitsuketa_tribute\"\n              placeholder={jsonData}\n              locale={locale}\n              onChange={(props: any) => {\n                if (!props.jsObject) return\n                handleJson({\n                  updated_src: props.jsObject\n                })\n              }}\n              style={{\n                outerBox: { width: \"100%\" },\n                container: { width: \"100%\", fontSize: 14 }\n              }}\n              colors={{\n                background: \"rgba(143, 155, 179, 0.3)\",\n                default: theme.palette.primary.light\n              }}\n            />\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}