{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/pages/_app.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport Head from \"next/head\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport defaultTheme from \"@/utils/themes/defaultTheme\";\nimport CommonSnackbar from \"@/components/CommonSnackbar\";\nimport { SnackbarProvider } from \"notistack\";\nimport SnackMessage from \"@/components/CommonSnackbar/Message\";\nimport \"@/utils/i18n\";\nimport { useTranslation } from \"react-i18next\";\nimport { Collection as Schema } from \"@/core/schema/collections\";\nimport rxDb from \"@/utils/database/rxConnect\";\nimport addResource from \"@/utils/scripts/addResource\";\nimport initData from \"@/utils/scripts/initData\";\nimport { Collection as Setting, SettingNames } from \"@/core/setting/collections\";\n\nvar App = function App(_ref) {\n  _s();\n\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useTranslation = useTranslation(),\n      i18n = _useTranslation.i18n;\n\n  useEffect(function () {\n    ;\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var db, setting, resI18nCode, pathObj, jssStyles;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return initData();\n\n            case 2:\n              _context.next = 4;\n              return rxDb();\n\n            case 4:\n              db = _context.sent;\n              setting = db[Setting.name];\n              _context.next = 8;\n              return setting.findOne({\n                name: {\n                  $eq: SettingNames.i18n_code\n                }\n              }).exec();\n\n            case 8:\n              resI18nCode = _context.sent;\n              if (resI18nCode) i18n.changeLanguage(resI18nCode.value).then(); // Add i18n resource\n\n              db[Schema.name].find().exec().then(function (schemas) {\n                schemas.map(function (_ref3) {\n                  var team = _ref3.team,\n                      group = _ref3.group;\n                  if (!pathObj) pathObj = {}; // continue when plugin path added\n\n                  if (!pathObj[team + group]) {\n                    pathObj[team + group] = true;\n                    addResource({\n                      i18n: i18n,\n                      team: team,\n                      group: group\n                    });\n                  }\n                });\n              });\n              jssStyles = document.querySelector(\"#jss-server-side\");\n\n              if (jssStyles) {\n                // @ts-ignore\n                jssStyles.parentElement.removeChild(jssStyles);\n              }\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, []);\n  return __jsx(React.Fragment, null, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"My page\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), __jsx(\"link\", {\n    href: \"https://cdn.bootcss.com/material-design-icons/3.0.1/iconfont/material-icons.css\",\n    rel: \"stylesheet\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), __jsx(ThemeProvider, {\n    theme: defaultTheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, __jsx(CssBaseline, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }), __jsx(SnackbarProvider, {\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"right\"\n    },\n    autoHideDuration: 2000,\n    content: function content(key, message) {\n      return __jsx(SnackMessage, {\n        id: key,\n        message: message,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(CommonSnackbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })), __jsx(Component, _extends({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }))));\n};\n\n_s(App, \"XIFq83ieJr2IDBjDrSkk+Qj6jto=\", false, function () {\n  return [useTranslation];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/pages/_app.tsx"],"names":["React","useEffect","Head","ThemeProvider","CssBaseline","defaultTheme","CommonSnackbar","SnackbarProvider","SnackMessage","useTranslation","Collection","Schema","rxDb","addResource","initData","Setting","SettingNames","App","Component","pageProps","i18n","db","setting","name","findOne","$eq","i18n_code","exec","resI18nCode","changeLanguage","value","then","find","schemas","map","team","group","pathObj","jssStyles","document","querySelector","parentElement","removeChild","vertical","horizontal","key","message"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,OAAOC,YAAP,MAAyB,qCAAzB;AACA,OAAO,cAAP;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,UAAU,IAAIC,MAAvB,QAAqC,2BAArC;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AAEA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASJ,UAAU,IAAIK,OAAvB,EAAgCC,YAAhC,QAAoD,4BAApD;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,OAAwC;AAAA;;AAAA,MAArCC,SAAqC,QAArCA,SAAqC;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;;AAAA,wBACjCV,cAAc,EADmB;AAAA,MAC1CW,IAD0C,mBAC1CA,IAD0C;;AAGlDnB,EAAAA,SAAS,CAAC,YAAM;AACd;;AAAC,6DAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEMa,QAAQ,EAFd;;AAAA;AAAA;AAAA,qBAKiBF,IAAI,EALrB;;AAAA;AAKMS,cAAAA,EALN;AAMMC,cAAAA,OANN,GAMgBD,EAAE,CAACN,OAAO,CAACQ,IAAT,CANlB;AAAA;AAAA,qBAO0BD,OAAO,CAC9BE,OADuB,CACf;AAAED,gBAAAA,IAAI,EAAE;AAAEE,kBAAAA,GAAG,EAAET,YAAY,CAACU;AAApB;AAAR,eADe,EAEvBC,IAFuB,EAP1B;;AAAA;AAOMC,cAAAA,WAPN;AAUA,kBAAIA,WAAJ,EAAiBR,IAAI,CAACS,cAAL,CAAoBD,WAAW,CAACE,KAAhC,EAAuCC,IAAvC,GAVjB,CAYA;;AAEAV,cAAAA,EAAE,CAACV,MAAM,CAACY,IAAR,CAAF,CACGS,IADH,GAEGL,IAFH,GAGGI,IAHH,CAGQ,UAACE,OAAD,EAAiB;AACrBA,gBAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiC;AAAA,sBAA9BC,IAA8B,SAA9BA,IAA8B;AAAA,sBAAxBC,KAAwB,SAAxBA,KAAwB;AAC3C,sBAAI,CAACC,OAAL,EAAcA,OAAO,GAAG,EAAV,CAD6B,CAE3C;;AACA,sBAAI,CAACA,OAAO,CAACF,IAAI,GAAGC,KAAR,CAAZ,EAA4B;AAC1BC,oBAAAA,OAAO,CAACF,IAAI,GAAGC,KAAR,CAAP,GAAwB,IAAxB;AACAvB,oBAAAA,WAAW,CAAC;AAAEO,sBAAAA,IAAI,EAAJA,IAAF;AAAQe,sBAAAA,IAAI,EAAJA,IAAR;AAAcC,sBAAAA,KAAK,EAALA;AAAd,qBAAD,CAAX;AACD;AACF,iBAPD;AAQD,eAZH;AAcME,cAAAA,SA5BN,GA4BkBC,QAAQ,CAACC,aAAT,CAAuB,kBAAvB,CA5BlB;;AA6BA,kBAAIF,SAAJ,EAAe;AACb;AACAA,gBAAAA,SAAS,CAACG,aAAV,CAAwBC,WAAxB,CAAoCJ,SAApC;AACD;;AAhCD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD;AAkCF,GAnCQ,EAmCN,EAnCM,CAAT;AAqCA,SACE,4BACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAC,sDAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAME;AACE,IAAA,IAAI,EAAC,iFADP;AAEE,IAAA,GAAG,EAAC,YAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF,EAYE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEjC,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAIE,MAAC,gBAAD;AACE,IAAA,YAAY,EAAE;AACZsC,MAAAA,QAAQ,EAAE,KADE;AAEZC,MAAAA,UAAU,EAAE;AAFA,KADhB;AAKE,IAAA,gBAAgB,EAAE,IALpB;AAME,IAAA,OAAO,EAAE,iBAACC,GAAD,EAAMC,OAAN;AAAA,aACP,MAAC,YAAD;AAAc,QAAA,EAAE,EAAED,GAAlB;AAAuB,QAAA,OAAO,EAAEC,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADO;AAAA,KANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAUE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAJF,EAiBE,MAAC,SAAD,eAAe3B,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAjBF,CAZF,CADF;AAkCD,CA1ED;;GAAMF,G;UACaR,c;;;KADbQ,G;AA4EN,eAAeA,GAAf","sourcesContent":["import React, { useEffect } from \"react\"\nimport { AppProps } from \"next/app\"\nimport Head from \"next/head\"\nimport { ThemeProvider } from \"@material-ui/core/styles\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\nimport defaultTheme from \"@/utils/themes/defaultTheme\"\nimport CommonSnackbar from \"@/components/CommonSnackbar\"\nimport { SnackbarProvider } from \"notistack\"\nimport SnackMessage from \"@/components/CommonSnackbar/Message\"\nimport \"@/utils/i18n\"\nimport { useTranslation } from \"react-i18next\"\nimport { Collection as Schema } from \"@/core/schema/collections\"\nimport rxDb from \"@/utils/database/rxConnect\"\nimport { Type as SchemaType } from \"@/core/schema/types\"\nimport addResource from \"@/utils/scripts/addResource\"\nimport initData from \"@/utils/scripts/initData\"\nimport { Collection as Setting, SettingNames } from \"@/core/setting/collections\"\n\nconst App = ({ Component, pageProps }: AppProps) => {\n  const { i18n } = useTranslation()\n\n  useEffect(() => {\n    ;(async () => {\n      // Init Data\n      await initData()\n\n      // Load setting i18n_code\n      const db = await rxDb()\n      const setting = db[Setting.name]\n      const resI18nCode = await setting\n        .findOne({ name: { $eq: SettingNames.i18n_code } })\n        .exec()\n      if (resI18nCode) i18n.changeLanguage(resI18nCode.value).then()\n\n      // Add i18n resource\n      let pathObj: any\n      db[Schema.name]\n        .find()\n        .exec()\n        .then((schemas: []) => {\n          schemas.map(({ team, group }: SchemaType) => {\n            if (!pathObj) pathObj = {}\n            // continue when plugin path added\n            if (!pathObj[team + group]) {\n              pathObj[team + group] = true\n              addResource({ i18n, team, group })\n            }\n          })\n        })\n\n      const jssStyles = document.querySelector(\"#jss-server-side\")\n      if (jssStyles) {\n        // @ts-ignore\n        jssStyles.parentElement.removeChild(jssStyles)\n      }\n    })()\n  }, [])\n\n  return (\n    <>\n      <Head>\n        <title>My page</title>\n        <meta\n          name=\"viewport\"\n          content=\"minimum-scale=1, initial-scale=1, width=device-width\"\n        />\n        <link\n          href=\"https://cdn.bootcss.com/material-design-icons/3.0.1/iconfont/material-icons.css\"\n          rel=\"stylesheet\"\n        />\n      </Head>\n      <ThemeProvider theme={defaultTheme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        {/* Snackbar / Notice */}\n        <SnackbarProvider\n          anchorOrigin={{\n            vertical: \"top\",\n            horizontal: \"right\"\n          }}\n          autoHideDuration={2000}\n          content={(key, message) => (\n            <SnackMessage id={key} message={message} />\n          )}\n        >\n          <CommonSnackbar />\n        </SnackbarProvider>\n        {/* Core component */}\n        <Component {...pageProps} />\n      </ThemeProvider>\n    </>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}