{"ast":null,"code":"var _jsxFileName = \"/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/layouts/DefaultLayout/LeftMenu/NestedMenu.tsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport MenuIcon from \"./MenuIcon\";\nimport { useRouter } from \"next/router\";\nimport { DynamicRoute, DynamicDocRoute } from \"@/utils/routes\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { useTranslation } from \"react-i18next\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n    padding: 0\n  },\n  nested: {\n    paddingLeft: theme.spacing(5),\n    transition: \"padding-left 0.5s ease\"\n  },\n  expandIcon: {\n    color: theme.bunadmin.iconColor\n  }\n}));\nexport default function NestedList({\n  data\n}) {\n  const {\n    t\n  } = useTranslation(\"plugins\");\n  const router = useRouter();\n  let {\n    group: qGroup,\n    name: qName\n  } = router.query;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState({});\n\n  if (router.route === DynamicDocRoute) {\n    qGroup = \"doc/\" + router.query.category;\n    qName = router.query.slug;\n  }\n\n  useEffect(() => {\n    // set default opened parent\n    if (typeof qGroup !== \"string\") return;\n    const parent = qGroup.replace(\"doc/\", \"\");\n    handleOpen({\n      name: parent\n    });\n  }, []);\n\n  const handleOpen = ({\n    name\n  }) => {\n    setOpen(_objectSpread(_objectSpread({}, open), {}, {\n      [name]: !open[name]\n    }));\n  };\n\n  const handleClick = ({\n    name,\n    slug\n  }) => {\n    if (slug !== undefined && slug !== \"\") {\n      const isUrl = new RegExp(\"^http.*\").test(slug);\n\n      if (!isUrl) {\n        if (router.route === DynamicDocRoute) {\n          return router.push(DynamicDocRoute, slug).then(_r => {});\n        }\n\n        router.push(DynamicRoute, slug).then(_r => {});\n      } else {\n        router.push(slug).then(_r => {});\n      }\n    } else {\n      handleOpen({\n        name\n      });\n    }\n  };\n\n  if (data.length === 0) return null;\n  return __jsx(React.Fragment, null, data.filter(item => item.parent === \"\").map(item => {\n    const {\n      name,\n      label,\n      slug,\n      icon,\n      icon_type\n    } = item;\n    return __jsx(List, {\n      key: name,\n      component: \"nav\",\n      className: classes.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }, __jsx(ListItem, {\n      button: true,\n      selected: slug === `/${qGroup}/${qName}`,\n      onClick: () => handleClick({\n        name,\n        slug\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 15\n      }\n    }, __jsx(ListItemIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, __jsx(MenuIcon, {\n      name: name,\n      icon: icon,\n      icon_type: icon_type,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 19\n      }\n    })), __jsx(ListItemText, {\n      primary: t(label || name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }), data.filter(item => item.parent === name).length > 0 && (open[name] ? __jsx(ExpandLess, {\n      fontSize: \"small\",\n      className: classes.expandIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }) : __jsx(ExpandMore, {\n      fontSize: \"small\",\n      className: classes.expandIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }))), __jsx(Collapse, {\n      in: open[name],\n      timeout: \"auto\",\n      unmountOnExit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, __jsx(List, {\n      component: \"div\",\n      disablePadding: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, data.filter(item => item.parent === name).map(item => {\n      const {\n        name,\n        label,\n        slug\n      } = item;\n      return __jsx(ListItem, {\n        key: name,\n        button: true,\n        className: classes.nested,\n        selected: slug === `/${qGroup}/${qName}`,\n        onClick: () => handleClick({\n          name,\n          slug\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 25\n        }\n      }, __jsx(ListItemText, {\n        primary: t(label || name),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 27\n        }\n      }));\n    }))));\n  }));\n}","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/layouts/DefaultLayout/LeftMenu/NestedMenu.tsx"],"names":["React","useEffect","makeStyles","createStyles","List","ListItem","ListItemIcon","ListItemText","Collapse","MenuIcon","useRouter","DynamicRoute","DynamicDocRoute","ExpandLess","ExpandMore","useTranslation","useStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","padding","nested","paddingLeft","spacing","transition","expandIcon","color","bunadmin","iconColor","NestedList","data","t","router","group","qGroup","name","qName","query","classes","open","setOpen","useState","route","category","slug","parent","replace","handleOpen","handleClick","undefined","isUrl","RegExp","test","push","then","_r","length","filter","item","map","label","icon","icon_type"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\"\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\"\nimport List from \"@material-ui/core/List\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport { Type } from \"@/core/menu/types\"\nimport MenuIcon from \"./MenuIcon\"\nimport { useRouter } from \"next/router\"\nimport { DynamicRoute, DynamicDocRoute } from \"@/utils/routes\"\nimport ExpandLess from \"@material-ui/icons/ExpandLess\"\nimport ExpandMore from \"@material-ui/icons/ExpandMore\"\nimport { useTranslation } from \"react-i18next\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: \"100%\",\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n      padding: 0\n    },\n    nested: {\n      paddingLeft: theme.spacing(5),\n      transition: \"padding-left 0.5s ease\"\n    },\n    expandIcon: {\n      color: theme.bunadmin.iconColor\n    }\n  })\n)\n\ninterface Props {\n  data: Type[]\n}\n\nexport default function NestedList({ data }: Props): any {\n  const { t } = useTranslation(\"plugins\")\n  const router = useRouter()\n  let { group: qGroup, name: qName } = router.query\n  const classes = useStyles()\n  const [open, setOpen] = React.useState({} as { [key: string]: boolean })\n\n  if (router.route === DynamicDocRoute) {\n    qGroup = \"doc/\" + router.query.category\n    qName = router.query.slug\n  }\n\n  useEffect(() => {\n    // set default opened parent\n    if (typeof qGroup !== \"string\") return\n    const parent = qGroup.replace(\"doc/\", \"\")\n    handleOpen({ name: parent })\n  }, [])\n\n  const handleOpen = ({ name }: { name: string }) => {\n    setOpen({\n      ...open,\n      [name]: !open[name]\n    })\n  }\n\n  const handleClick = ({ name, slug }: { name: string; slug?: string }) => {\n    if (slug !== undefined && slug !== \"\") {\n      const isUrl = new RegExp(\"^http.*\").test(slug)\n\n      if (!isUrl) {\n        if (router.route === DynamicDocRoute) {\n          return router.push(DynamicDocRoute, slug).then(_r => {})\n        }\n\n        router.push(DynamicRoute, slug).then(_r => {})\n      } else {\n        router.push(slug).then(_r => {})\n      }\n    } else {\n      handleOpen({ name })\n    }\n  }\n\n  if (data.length === 0) return null\n\n  return (\n    <>\n      {data\n        .filter(item => item.parent === \"\")\n        .map(item => {\n          const { name, label, slug, icon, icon_type } = item\n          return (\n            <List key={name} component=\"nav\" className={classes.root}>\n              <ListItem\n                button\n                selected={slug === `/${qGroup}/${qName}`}\n                onClick={() => handleClick({ name, slug })}\n              >\n                <ListItemIcon>\n                  <MenuIcon name={name} icon={icon} icon_type={icon_type} />\n                </ListItemIcon>\n                <ListItemText primary={t(label || name)} />\n                {/* Expand Icon */}\n                {data.filter(item => item.parent === name).length > 0 &&\n                  (open[name] ? (\n                    <ExpandLess\n                      fontSize=\"small\"\n                      className={classes.expandIcon}\n                    />\n                  ) : (\n                    <ExpandMore\n                      fontSize=\"small\"\n                      className={classes.expandIcon}\n                    />\n                  ))}\n              </ListItem>\n              {/* Collapse */}\n              <Collapse in={open[name]} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                  {/* Submenus */}\n                  {data\n                    .filter(item => item.parent === name)\n                    .map(item => {\n                      const { name, label, slug } = item\n                      return (\n                        <ListItem\n                          key={name}\n                          button\n                          className={classes.nested}\n                          selected={slug === `/${qGroup}/${qName}`}\n                          onClick={() => handleClick({ name, slug })}\n                        >\n                          <ListItemText primary={t(label || name)} />\n                        </ListItem>\n                      )\n                    })}\n                </List>\n              </Collapse>\n            </List>\n          )\n        })}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}