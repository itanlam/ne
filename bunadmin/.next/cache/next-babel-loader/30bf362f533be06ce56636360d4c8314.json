{"ast":null,"code":"/**\n * Remote data controller\n */\nimport request from \"@/utils/scripts/request\";\nimport { ENV } from \"@/utils/config\";\n\nvar dataController = function dataController(_ref) {\n  var query = _ref.query,\n      name = _ref.name;\n  return new Promise(function (resolve) {\n    request(\"/\".concat(name, \"?page=\").concat(query.page + 1, \"&pageSize=\").concat(query.pageSize), {\n      prefix: ENV.AUTH_URL,\n      method: \"GET\",\n      responseType: \"text\"\n    }).then(function (result) {\n      var JSONBigInt = require(\"json-bigint\");\n\n      result = JSONBigInt.parse(result);\n      resolve({\n        data: result.data,\n        page: result.page - 1,\n        totalCount: result.total\n      });\n    })[\"catch\"](function (e) {\n      console.error(e);\n    });\n  });\n};\n\nexport default dataController;","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/components/CommonSchema/controllers/dataController.tsx"],"names":["request","ENV","dataController","query","name","Promise","resolve","page","pageSize","prefix","AUTH_URL","method","responseType","then","result","JSONBigInt","require","parse","data","totalCount","total","e","console","error"],"mappings":"AAAA;;;AAIA,OAAOA,OAAP,MAAoB,yBAApB;AACA,SAASC,GAAT,QAAoB,gBAApB;;AAOA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,IAAV,QAAUA,IAAV;AAAA,SACrB,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AACrBN,IAAAA,OAAO,YAAKI,IAAL,mBAAkBD,KAAK,CAACI,IAAN,GAAa,CAA/B,uBAA6CJ,KAAK,CAACK,QAAnD,GAA+D;AACpEC,MAAAA,MAAM,EAAER,GAAG,CAACS,QADwD;AAEpEC,MAAAA,MAAM,EAAE,KAF4D;AAGpEC,MAAAA,YAAY,EAAE;AAHsD,KAA/D,CAAP,CAKGC,IALH,CAKQ,UAAAC,MAAM,EAAI;AACd,UAAMC,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACAF,MAAAA,MAAM,GAAGC,UAAU,CAACE,KAAX,CAAiBH,MAAjB,CAAT;AAEAR,MAAAA,OAAO,CAAC;AACNY,QAAAA,IAAI,EAAEJ,MAAM,CAACI,IADP;AAENX,QAAAA,IAAI,EAAEO,MAAM,CAACP,IAAP,GAAc,CAFd;AAGNY,QAAAA,UAAU,EAAEL,MAAM,CAACM;AAHb,OAAD,CAAP;AAKD,KAdH,WAeS,UAAAC,CAAC,EAAI;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD,KAjBH;AAkBD,GAnBD,CADqB;AAAA,CAAvB;;AAsBA,eAAenB,cAAf","sourcesContent":["/**\n * Remote data controller\n */\nimport { Query, QueryResult } from \"material-table\"\nimport request from \"@/utils/scripts/request\"\nimport { ENV } from \"@/utils/config\"\n\ninterface Props {\n  query: Query<any>\n  name: string\n}\n\nconst dataController = ({ query, name }: Props) =>\n  new Promise(resolve => {\n    request(`/${name}?page=${query.page + 1}&pageSize=${query.pageSize}`, {\n      prefix: ENV.AUTH_URL,\n      method: \"GET\",\n      responseType: \"text\"\n    })\n      .then(result => {\n        const JSONBigInt = require(\"json-bigint\")\n        result = JSONBigInt.parse(result)\n\n        resolve({\n          data: result.data,\n          page: result.page - 1,\n          totalCount: result.total\n        })\n      })\n      .catch(e => {\n        console.error(e)\n      })\n  }) as Promise<QueryResult<any>>\n\nexport default dataController\n"]},"metadata":{},"sourceType":"module"}