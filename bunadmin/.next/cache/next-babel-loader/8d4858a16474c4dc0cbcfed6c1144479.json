{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport request from \"@/utils/scripts/request\";\nimport storedToken from \"@/utils/scripts/storedToken\";\nimport { ENV } from \"@/utils/config\";\n\nfunction verify() {\n  return _verify.apply(this, arguments);\n}\n\nfunction _verify() {\n  _verify = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var token;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return storedToken();\n\n          case 2:\n            token = _context.sent;\n            return _context.abrupt(\"return\", request(\"/auth/me\", {\n              prefix: ENV.AUTH_URL,\n              method: \"POST\",\n              headers: {\n                Authorization: \"Bearer \".concat(token)\n              }\n            }));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _verify.apply(this, arguments);\n}\n\nexport default verify;","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/plugins/buncms-user/utils/verify.tsx"],"names":["request","storedToken","ENV","verify","token","prefix","AUTH_URL","method","headers","Authorization"],"mappings":";;AAAA,OAAOA,OAAP,MAAoB,yBAApB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,SAASC,GAAT,QAAoB,gBAApB;;SAEeC,M;;;;;qEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACsBF,WAAW,EADjC;;AAAA;AACQG,YAAAA,KADR;AAAA,6CAISJ,OAAO,CAAC,UAAD,EAAa;AACzBK,cAAAA,MAAM,EAAEH,GAAG,CAACI,QADa;AAEzBC,cAAAA,MAAM,EAAE,MAFiB;AAGzBC,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,mBAAYL,KAAZ;AADN;AAHgB,aAAb,CAJhB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAaA,eAAeD,MAAf","sourcesContent":["import request from \"@/utils/scripts/request\"\nimport storedToken from \"@/utils/scripts/storedToken\"\nimport { ENV } from \"@/utils/config\"\n\nasync function verify(): Promise<any> {\n  const token = await storedToken()\n\n  // query remote user with token\n  return request(\"/auth/me\", {\n    prefix: ENV.AUTH_URL,\n    method: \"POST\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  })\n}\n\nexport default verify\n"]},"metadata":{},"sourceType":"module"}