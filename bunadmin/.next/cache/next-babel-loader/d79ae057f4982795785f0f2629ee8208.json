{"ast":null,"code":"import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport zh from \"./zh\";\nimport en from \"./en\";\nimport de from \"./de\";\nimport { ENV } from \"@/utils/config\";\nexport var i18nMenus = [{\n  code: \"en\",\n  name: \"English\"\n}, {\n  code: \"zh\",\n  name: \"简体中文\"\n}];\nexport var i18nCodes = {\n  de: \"de\",\n  // as example for now, you can complete it.\n  en: \"en\",\n  zh: \"zh\"\n};\ni18n.use(initReactI18next).init({\n  // If your language does not yet exist or has translation problems,\n  // please push it and I will merge it as soon as possible.\n  // ISO 639-1: https://www.w3schools.com/tags/ref_language_codes.asp\n  resources: {\n    de: de,\n    // as example for now, you can complete the translations.\n    en: en,\n    zh: zh\n  },\n  lng: ENV.I18N_CODE,\n  fallbackLng: \"en\",\n  debug: false,\n  // have a common namespace used around the full app\n  ns: [\"core\"],\n  defaultNS: \"core\",\n  keySeparator: false,\n  // we use content as keys\n  interpolation: {\n    escapeValue: false\n  }\n}).then(function () {\n  return console.info(\"[ i18n ]  \".concat(ENV.I18N_CODE));\n});\nexport default i18n;","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/utils/i18n/index.tsx"],"names":["i18n","initReactI18next","zh","en","de","ENV","i18nMenus","code","name","i18nCodes","use","init","resources","lng","I18N_CODE","fallbackLng","debug","ns","defaultNS","keySeparator","interpolation","escapeValue","then","console","info"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,SAASC,gBAAT,QAAiC,eAAjC;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,OAAOC,EAAP,MAAe,MAAf;AACA,SAASC,GAAT,QAAoB,gBAApB;AAEA,OAAO,IAAMC,SAAS,GAAG,CACvB;AAAEC,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,IAAI,EAAE;AAApB,CADuB,EAEvB;AAAED,EAAAA,IAAI,EAAE,IAAR;AAAcC,EAAAA,IAAI,EAAE;AAApB,CAFuB,CAAlB;AAKP,OAAO,IAAMC,SAAS,GAAG;AACvBL,EAAAA,EAAE,EAAE,IADmB;AACb;AACVD,EAAAA,EAAE,EAAE,IAFmB;AAGvBD,EAAAA,EAAE,EAAE;AAHmB,CAAlB;AAMPF,IAAI,CACDU,GADH,CACOT,gBADP,EAEGU,IAFH,CAEQ;AACJ;AACA;AACA;AACAC,EAAAA,SAAS,EAAE;AACTR,IAAAA,EAAE,EAAFA,EADS;AACL;AACJD,IAAAA,EAAE,EAAFA,EAFS;AAGTD,IAAAA,EAAE,EAAFA;AAHS,GAJP;AASJW,EAAAA,GAAG,EAAER,GAAG,CAACS,SATL;AAUJC,EAAAA,WAAW,EAAE,IAVT;AAWJC,EAAAA,KAAK,EAAE,KAXH;AAaJ;AACAC,EAAAA,EAAE,EAAE,CAAC,MAAD,CAdA;AAeJC,EAAAA,SAAS,EAAE,MAfP;AAiBJC,EAAAA,YAAY,EAAE,KAjBV;AAiBiB;AAErBC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE;AADA;AAnBX,CAFR,EAyBGC,IAzBH,CAyBQ;AAAA,SAAMC,OAAO,CAACC,IAAR,qBAA0BnB,GAAG,CAACS,SAA9B,EAAN;AAAA,CAzBR;AA2BA,eAAed,IAAf","sourcesContent":["import i18n from \"i18next\"\nimport { initReactI18next } from \"react-i18next\"\nimport zh from \"./zh\"\nimport en from \"./en\"\nimport de from \"./de\"\nimport { ENV } from \"@/utils/config\"\n\nexport const i18nMenus = [\n  { code: \"en\", name: \"English\" },\n  { code: \"zh\", name: \"简体中文\" }\n]\n\nexport const i18nCodes = {\n  de: \"de\", // as example for now, you can complete it.\n  en: \"en\",\n  zh: \"zh\"\n}\n\ni18n\n  .use(initReactI18next)\n  .init({\n    // If your language does not yet exist or has translation problems,\n    // please push it and I will merge it as soon as possible.\n    // ISO 639-1: https://www.w3schools.com/tags/ref_language_codes.asp\n    resources: {\n      de, // as example for now, you can complete the translations.\n      en,\n      zh\n    },\n    lng: ENV.I18N_CODE,\n    fallbackLng: \"en\",\n    debug: false,\n\n    // have a common namespace used around the full app\n    ns: [\"core\"],\n    defaultNS: \"core\",\n\n    keySeparator: false, // we use content as keys\n\n    interpolation: {\n      escapeValue: false\n    }\n  })\n  .then(() => console.info(`[ i18n ]  ${ENV.I18N_CODE}`))\n\nexport default i18n\n"]},"metadata":{},"sourceType":"module"}