{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/core/migration/components/Dialog/index.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport ConfirmDialog from \"@/components/CommonDialog/ConfirmDialog\";\nimport rxDb from \"@/utils/database/rxConnect\";\nimport { fsDownload, fsUpload } from \"@/utils/scripts/fs\";\nimport UploadConfirmDialog from \"@/components/CommonDialog/UploadCustomDialog\";\nimport { notice } from \"@/core\";\nexport default function MigrationDialogs(_ref) {\n  var selData = _ref.selData,\n      modalState = _ref.modalState,\n      uploadModal = _ref.uploadModal;\n  return __jsx(React.Fragment, null, __jsx(ConfirmDialog, {\n    openModal: modalState.open,\n    title: modalState.title,\n    msg: modalState.msg,\n    doFunc: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var db;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return rxDb();\n\n            case 2:\n              db = _context.sent;\n              _context.t0 = selData.mode;\n              _context.next = _context.t0 === \"Export DB\" ? 6 : _context.t0 === \"Import DB\" ? 8 : 9;\n              break;\n\n            case 6:\n              db.dump().then(function (json) {\n                return fsDownload(json, \"bunadmin.json\", \"application/json\");\n              });\n              return _context.abrupt(\"break\", 10);\n\n            case 8:\n              return _context.abrupt(\"break\", 10);\n\n            case 9:\n              console.error(\"Missing method\");\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), __jsx(UploadConfirmDialog, {\n    title: uploadModal.title,\n    msg: uploadModal.msg,\n    accept: \"application/json\",\n    openModal: uploadModal.open,\n    onChange: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n        var json, db;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return fsUpload(e);\n\n              case 3:\n                json = _context2.sent;\n                _context2.next = 6;\n                return rxDb();\n\n              case 6:\n                db = _context2.sent;\n\n                // dump collection\n                if (selData.name !== \"ALL\") {\n                  db[selData.name].importDump(json).then(function () {\n                    // show notice\n                    notice({\n                      title: \"Import successful\"\n                    });\n                  });\n                } else {\n                  // dump database\n                  db.importDump(json).then(function () {\n                    // show notice\n                    notice({\n                      title: \"Import successful\"\n                    });\n                  });\n                }\n\n                _context2.next = 14;\n                break;\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](0);\n                _context2.next = 14;\n                return notice({\n                  title: \"Import failed\",\n                  severity: \"error\",\n                  content: _context2.t0.toString()\n                });\n\n              case 14:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[0, 10]]);\n      }));\n\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n}\n_c = MigrationDialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"MigrationDialogs\");","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/core/migration/components/Dialog/index.tsx"],"names":["React","ConfirmDialog","rxDb","fsDownload","fsUpload","UploadConfirmDialog","notice","MigrationDialogs","selData","modalState","uploadModal","open","title","msg","db","mode","dump","then","json","console","error","e","name","importDump","severity","content","toString"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,yCAA1B;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,oBAArC;AACA,OAAOC,mBAAP,MAAgC,8CAAhC;AACA,SAASC,MAAT,QAAuB,QAAvB;AAmBA,eAAe,SAASC,gBAAT,OAID;AAAA,MAHZC,OAGY,QAHZA,OAGY;AAAA,MAFZC,UAEY,QAFZA,UAEY;AAAA,MADZC,WACY,QADZA,WACY;AACZ,SACE,4BAEE,MAAC,aAAD;AACE,IAAA,SAAS,EAAED,UAAU,CAACE,IADxB;AAEE,IAAA,KAAK,EAAEF,UAAU,CAACG,KAFpB;AAGE,IAAA,GAAG,EAAEH,UAAU,CAACI,GAHlB;AAIE,IAAA,MAAM,wEAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACWX,IAAI,EADf;;AAAA;AACAY,cAAAA,EADA;AAAA,4BAEEN,OAAO,CAACO,IAFV;AAAA,8CAGC,WAHD,uBAQC,WARD;AAAA;;AAAA;AAIFD,cAAAA,EAAE,CAACE,IAAH,GAAUC,IAAV,CAAe,UAACC,IAAD;AAAA,uBACbf,UAAU,CAACe,IAAD,EAAO,eAAP,EAAwB,kBAAxB,CADG;AAAA,eAAf;AAJE;;AAAA;AAAA;;AAAA;AAYFC,cAAAA,OAAO,CAACC,KAAR,CAAc,gBAAd;;AAZE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAuBE,MAAC,mBAAD;AACE,IAAA,KAAK,EAAEV,WAAW,CAACE,KADrB;AAEE,IAAA,GAAG,EAAEF,WAAW,CAACG,GAFnB;AAGE,IAAA,MAAM,EAAC,kBAHT;AAIE,IAAA,SAAS,EAAEH,WAAW,CAACC,IAJzB;AAKE,IAAA,QAAQ;AAAA,2EAAE,kBAAMU,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEajB,QAAQ,CAACiB,CAAD,CAFrB;;AAAA;AAEAH,gBAAAA,IAFA;AAAA;AAAA,uBAGWhB,IAAI,EAHf;;AAAA;AAGAY,gBAAAA,EAHA;;AAIN;AACA,oBAAIN,OAAO,CAACc,IAAR,KAAiB,KAArB,EAA4B;AAC1BR,kBAAAA,EAAE,CAACN,OAAO,CAACc,IAAT,CAAF,CAAiBC,UAAjB,CAA4BL,IAA5B,EAAkCD,IAAlC,CAAuC,YAAM;AAC3C;AACAX,oBAAAA,MAAM,CAAC;AAAEM,sBAAAA,KAAK;AAAP,qBAAD,CAAN;AACD,mBAHD;AAID,iBALD,MAKO;AACL;AACAE,kBAAAA,EAAE,CAACS,UAAH,CAAcL,IAAd,EAAoBD,IAApB,CAAyB,YAAM;AAC7B;AACAX,oBAAAA,MAAM,CAAC;AAAEM,sBAAAA,KAAK;AAAP,qBAAD,CAAN;AACD,mBAHD;AAID;;AAhBK;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,uBAmBAN,MAAM,CAAC;AACXM,kBAAAA,KAAK,iBADM;AAEXY,kBAAAA,QAAQ,EAAE,OAFC;AAGXC,kBAAAA,OAAO,EAAE,aAAEC,QAAF;AAHE,iBAAD,CAnBN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,CADF;AA0DD;KA/DuBnB,gB","sourcesContent":["import React from \"react\"\nimport ConfirmDialog from \"@/components/CommonDialog/ConfirmDialog\"\nimport rxDb from \"@/utils/database/rxConnect\"\nimport { fsDownload, fsUpload } from \"@/utils/scripts/fs\"\nimport UploadConfirmDialog from \"@/components/CommonDialog/UploadCustomDialog\"\nimport { notice } from \"@/core\"\n\ninterface Interface {\n  selData: {\n    name: string\n    mode: string\n  }\n  modalState: {\n    open: number\n    title: string\n    msg: string\n  }\n  uploadModal: {\n    open: number\n    title: string\n    msg: string\n  }\n}\n\nexport default function MigrationDialogs({\n  selData,\n  modalState,\n  uploadModal\n}: Interface) {\n  return (\n    <>\n      {/* ConfirmDialog */}\n      <ConfirmDialog\n        openModal={modalState.open}\n        title={modalState.title}\n        msg={modalState.msg}\n        doFunc={async () => {\n          const db = await rxDb()\n          switch (selData.mode) {\n            case \"Export DB\":\n              db.dump().then((json: any) =>\n                fsDownload(json, \"bunadmin.json\", \"application/json\")\n              )\n              break\n            case \"Import DB\":\n              // db.dump().then((json: any) => console.dir(json))\n              break\n            default:\n              console.error(\"Missing method\")\n          }\n        }}\n      />\n      {/* UploadConfirmDialog */}\n      <UploadConfirmDialog\n        title={uploadModal.title}\n        msg={uploadModal.msg}\n        accept=\"application/json\"\n        openModal={uploadModal.open}\n        onChange={async e => {\n          try {\n            const json = await fsUpload(e)\n            const db = await rxDb()\n            // dump collection\n            if (selData.name !== \"ALL\") {\n              db[selData.name].importDump(json).then(() => {\n                // show notice\n                notice({ title: `Import successful` })\n              })\n            } else {\n              // dump database\n              db.importDump(json).then(() => {\n                // show notice\n                notice({ title: `Import successful` })\n              })\n            }\n          } catch (e) {\n            // show notice\n            await notice({\n              title: `Import failed`,\n              severity: \"error\",\n              content: e.toString()\n            })\n          }\n        }}\n      />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}