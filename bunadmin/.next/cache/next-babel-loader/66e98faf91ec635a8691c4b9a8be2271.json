{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/components/CommonSnackbar/Message/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useSnackbar } from \"notistack\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport CheckCircleIcon from \"@material-ui/icons/OpenInNew\";\nimport { useStyles } from \"./styles\";\nimport rxSubscribe from \"@/utils/database/rxSubscribe\";\nimport { Collection } from \"@/core/notice/collections\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { LocalDataRoute } from \"@/utils/routes\";\nimport { useRouter } from \"next/router\";\nvar SnackMessage = React.forwardRef(_c = _s(function (props, ref) {\n  _s();\n\n  var router = useRouter();\n  var theme = useTheme();\n  var classes = useStyles();\n\n  var _useSnackbar = useSnackbar(),\n      closeSnackbar = _useSnackbar.closeSnackbar;\n\n  var _useState = useState(false),\n      expanded = _useState[0],\n      setExpanded = _useState[1];\n\n  var _useState2 = useState({\n    severity: \"none\",\n    content: null\n  }),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var colors = {\n    none: null,\n    success: \"linear-gradient(45deg, \".concat(theme.palette.success.light, \" 30%, rgba(200, 200, 200, 0.88) 125%)\"),\n    error: \"linear-gradient(45deg, \".concat(theme.palette.error.light, \" 30%, rgba(200, 200, 200, 0.88) 125%)\"),\n    warning: \"linear-gradient(45deg, \".concat(theme.palette.warning.light, \" 30%, rgba(200, 200, 200, 0.88) 125%)\"),\n    info: \"linear-gradient(45deg, \".concat(theme.palette.info.light, \" 30%, rgba(200, 200, 200, 0.88) 125%)\")\n  };\n  React.useEffect(function () {\n    ;\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return rxSubscribe({\n                collection: Collection.name,\n                sort: {\n                  created_at: \"desc\"\n                },\n                callback: function callback(data) {\n                  var item = data[0];\n                  if (!item) return;\n                  setState({\n                    severity: item.severity,\n                    content: item.content\n                  });\n                }\n              });\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, []);\n\n  var handleExpandClick = function handleExpandClick() {\n    setExpanded(!expanded);\n  };\n\n  var handleDismiss = function handleDismiss() {\n    closeSnackbar(props.id);\n  };\n\n  return __jsx(Card, {\n    style: state.severity !== \"none\" ? {\n      background: colors[state.severity],\n      transition: \"width .2s ease-in-out\"\n    } : {\n      background: \"#FFF\",\n      transition: \"width .2s ease-in-out\" // theme.bunadmin.iconColor // theme.palette.primary.light\n\n    },\n    className: classes.card,\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(CardActions, {\n    classes: {\n      root: classes.actionRoot\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, __jsx(Typography, {\n    variant: \"subtitle2\",\n    className: classes.typography,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, props.message), __jsx(\"div\", {\n    className: classes.icons,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, state.content && __jsx(IconButton, {\n    \"aria-label\": \"Show more\",\n    color: \"inherit\",\n    className: expanded ? \"\".concat(classes.expand, \" \").concat(classes.expandOpen) : classes.expand,\n    onClick: handleExpandClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, __jsx(ExpandMoreIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  })), __jsx(IconButton, {\n    color: \"inherit\",\n    className: classes.expand,\n    onClick: handleDismiss,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, __jsx(CloseIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 15\n    }\n  })))), __jsx(Collapse, {\n    \"in\": expanded,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    addEndListener: undefined,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, __jsx(Paper, {\n    className: classes.collapse,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, __jsx(Typography, {\n    gutterBottom: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, state.content), __jsx(Button, {\n    size: \"small\",\n    className: classes.button,\n    onClick: function onClick() {\n      return router.push(LocalDataRoute.notice).then(function (_r) {});\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, __jsx(CheckCircleIcon, {\n    className: classes.checkIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }), \"Open List\"))));\n}, \"txrIksVj4kQQJGO6NCiOLdZDAG4=\", false, function () {\n  return [useRouter, useTheme, useStyles, useSnackbar];\n}));\n_c2 = SnackMessage;\nSnackMessage.propTypes = {\n  id: PropTypes.number.isRequired\n};\nexport default SnackMessage;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SnackMessage$React.forwardRef\");\n$RefreshReg$(_c2, \"SnackMessage\");","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/components/CommonSnackbar/Message/index.tsx"],"names":["React","useState","PropTypes","useSnackbar","Collapse","Paper","Typography","Card","CardActions","Button","IconButton","CloseIcon","ExpandMoreIcon","CheckCircleIcon","useStyles","rxSubscribe","Collection","useTheme","LocalDataRoute","useRouter","SnackMessage","forwardRef","props","ref","router","theme","classes","closeSnackbar","expanded","setExpanded","severity","content","state","setState","colors","none","success","palette","light","error","warning","info","useEffect","collection","name","sort","created_at","callback","data","item","handleExpandClick","handleDismiss","id","background","transition","card","root","actionRoot","typography","message","icons","expand","expandOpen","undefined","collapse","button","push","notice","then","_r","checkIcon","propTypes","number","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport PropTypes from \"prop-types\"\nimport { SnackbarKey, SnackbarMessage, useSnackbar } from \"notistack\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport Paper from \"@material-ui/core/Paper\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Card from \"@material-ui/core/Card\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Button from \"@material-ui/core/Button\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport CloseIcon from \"@material-ui/icons/Close\"\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\"\nimport CheckCircleIcon from \"@material-ui/icons/OpenInNew\"\nimport { useStyles } from \"./styles\"\nimport rxSubscribe from \"@/utils/database/rxSubscribe\"\nimport { Collection } from \"@/core/notice/collections\"\nimport { SeverityType } from \"@/core/notice/types\"\nimport { useTheme } from \"@material-ui/core/styles\"\nimport { LocalDataRoute } from \"@/utils/routes\"\nimport { useRouter } from \"next/router\"\n\ninterface State {\n  severity: SeverityType | \"none\"\n  content: string | null\n}\n\nconst SnackMessage = React.forwardRef(\n  (props: { id: SnackbarKey; message: SnackbarMessage }, ref) => {\n    const router = useRouter()\n    const theme = useTheme()\n    const classes = useStyles()\n    const { closeSnackbar } = useSnackbar()\n    const [expanded, setExpanded] = useState(false)\n    const [state, setState] = useState({\n      severity: \"none\",\n      content: null\n    } as State)\n\n    const colors = {\n      none: null,\n      success: `linear-gradient(45deg, ${theme.palette.success.light} 30%, rgba(200, 200, 200, 0.88) 125%)`,\n      error: `linear-gradient(45deg, ${theme.palette.error.light} 30%, rgba(200, 200, 200, 0.88) 125%)`,\n      warning: `linear-gradient(45deg, ${theme.palette.warning.light} 30%, rgba(200, 200, 200, 0.88) 125%)`,\n      info: `linear-gradient(45deg, ${theme.palette.info.light} 30%, rgba(200, 200, 200, 0.88) 125%)`\n    }\n\n    React.useEffect(() => {\n      ;(async () => {\n        await rxSubscribe({\n          collection: Collection.name,\n          sort: { created_at: \"desc\" },\n          callback: data => {\n            const item = data[0]\n\n            if (!item) return\n            setState({ severity: item.severity, content: item.content })\n          }\n        })\n      })()\n    }, [])\n\n    const handleExpandClick = () => {\n      setExpanded(!expanded)\n    }\n\n    const handleDismiss = () => {\n      closeSnackbar(props.id)\n    }\n\n    return (\n      <Card\n        style={\n          state.severity !== \"none\"\n            ? {\n                background: colors[state.severity],\n                transition: \"width .2s ease-in-out\"\n              }\n            : {\n                background: \"#FFF\",\n                transition: \"width .2s ease-in-out\"\n                // theme.bunadmin.iconColor // theme.palette.primary.light\n              }\n        }\n        className={classes.card}\n        ref={ref}\n      >\n        <CardActions classes={{ root: classes.actionRoot }}>\n          <Typography variant=\"subtitle2\" className={classes.typography}>\n            {props.message}\n          </Typography>\n          <div className={classes.icons}>\n            {state.content && (\n              <IconButton\n                aria-label=\"Show more\"\n                color=\"inherit\"\n                className={\n                  expanded\n                    ? `${classes.expand} ${classes.expandOpen}`\n                    : classes.expand\n                }\n                onClick={handleExpandClick}\n              >\n                <ExpandMoreIcon />\n              </IconButton>\n            )}\n            <IconButton\n              color=\"inherit\"\n              className={classes.expand}\n              onClick={handleDismiss}\n            >\n              <CloseIcon />\n            </IconButton>\n          </div>\n        </CardActions>\n        <Collapse\n          in={expanded}\n          timeout=\"auto\"\n          unmountOnExit\n          addEndListener={undefined}\n        >\n          <Paper className={classes.collapse}>\n            <Typography gutterBottom>{state.content}</Typography>\n            <Button\n              size=\"small\"\n              className={classes.button}\n              onClick={() => router.push(LocalDataRoute.notice).then(_r => {})}\n            >\n              <CheckCircleIcon className={classes.checkIcon} />\n              Open List\n            </Button>\n          </Paper>\n        </Collapse>\n      </Card>\n    )\n  }\n)\n\nSnackMessage.propTypes = {\n  id: PropTypes.number.isRequired\n}\n\nexport default SnackMessage\n"]},"metadata":{},"sourceType":"module"}