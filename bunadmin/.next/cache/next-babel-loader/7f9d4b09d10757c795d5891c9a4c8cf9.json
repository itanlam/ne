{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/core/menu/components/ParentSelect/index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport { useStyles } from \"./styles\";\nimport rxDb from \"@/utils/database/rxConnect\";\nimport { Collection } from \"@/core/menu/collections\";\nexport default function ParentSelect(_ref) {\n  _s();\n\n  var _this = this;\n\n  var rowData = _ref.rowData,\n      onChange = _ref.onChange;\n  var classes = useStyles();\n\n  var _React$useState = React.useState(rowData.parent),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      option = _React$useState2[0],\n      setOption = _React$useState2[1];\n\n  var _useState = useState([]),\n      data = _useState[0],\n      setData = _useState[1];\n\n  React.useEffect(function () {\n    ;\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var db, query, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return rxDb();\n\n            case 2:\n              db = _context.sent;\n              query = db[Collection.name].find().where(\"name\").ne(rowData.name).where(\"parent\") // limiting 2 level of the menu\n              .eq(\"\").sort({\n                name: \"asc\"\n              });\n              _context.next = 6;\n              return query.exec();\n\n            case 6:\n              data = _context.sent;\n              setData(data);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, []);\n  var inputLabel = React.useRef(null);\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      labelWidth = _React$useState4[0],\n      setLabelWidth = _React$useState4[1];\n\n  React.useEffect(function () {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  }, []);\n\n  var handleChange = function handleChange(event) {\n    setOption(event.target.value);\n    onChange(event.target.value);\n  };\n\n  return __jsx(FormControl, {\n    variant: \"outlined\",\n    className: classes.formControl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(InputLabel, {\n    ref: inputLabel,\n    id: \"common-simple-select-outlined-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Parent Name\"), __jsx(Select, {\n    labelId: \"common-simple-select-outlined-label\",\n    id: \"common-simple-select-outlined\",\n    value: option,\n    onChange: handleChange,\n    labelWidth: labelWidth,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(\"em\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"None\")), data.length > 0 && data.map(function (item) {\n    return __jsx(MenuItem, {\n      key: item.name,\n      value: item.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, item.name);\n  })));\n}\n\n_s(ParentSelect, \"H1abJRfA2VRlPcjYCopRUtOOuxo=\", false, function () {\n  return [useStyles];\n});\n\n_c = ParentSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParentSelect\");","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/core/menu/components/ParentSelect/index.tsx"],"names":["React","useState","InputLabel","MenuItem","FormControl","Select","useStyles","rxDb","Collection","ParentSelect","rowData","onChange","classes","parent","option","setOption","data","setData","useEffect","db","query","name","find","where","ne","eq","sort","exec","inputLabel","useRef","labelWidth","setLabelWidth","current","offsetWidth","handleChange","event","target","value","formControl","length","map","item"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport InputLabel from \"@material-ui/core/InputLabel\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport FormControl from \"@material-ui/core/FormControl\"\nimport Select from \"@material-ui/core/Select\"\nimport { EditComponentProps } from \"material-table\"\nimport { Type } from \"../../types\"\nimport { useStyles } from \"./styles\"\nimport rxDb from \"@/utils/database/rxConnect\"\nimport { Collection } from \"@/core/menu/collections\"\n\ninterface ParentSelectProps extends EditComponentProps<Type> {}\n\nexport default function ParentSelect({ rowData, onChange }: ParentSelectProps) {\n  const classes = useStyles()\n  const [option, setOption] = React.useState(rowData.parent)\n  const [data, setData]: [Type[], (data: any) => void] = useState([])\n\n  React.useEffect(() => {\n    ;(async () => {\n      const db = await rxDb()\n\n      const query = db[Collection.name]\n        .find()\n        .where(\"name\")\n        .ne(rowData.name)\n        .where(\"parent\") // limiting 2 level of the menu\n        .eq(\"\")\n        .sort({ name: \"asc\" })\n      const data = await query.exec()\n      setData(data)\n    })()\n  }, [])\n\n  const inputLabel = React.useRef<HTMLLabelElement>(null)\n  const [labelWidth, setLabelWidth] = React.useState(0)\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current!.offsetWidth)\n  }, [])\n\n  const handleChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n    setOption(event.target.value as string)\n    onChange(event.target.value)\n  }\n\n  return (\n    <FormControl variant=\"outlined\" className={classes.formControl}>\n      <InputLabel ref={inputLabel} id=\"common-simple-select-outlined-label\">\n        Parent Name\n      </InputLabel>\n      <Select\n        labelId=\"common-simple-select-outlined-label\"\n        id=\"common-simple-select-outlined\"\n        value={option}\n        onChange={handleChange}\n        labelWidth={labelWidth}\n      >\n        <MenuItem value=\"\">\n          <em>None</em>\n        </MenuItem>\n        {data.length > 0 &&\n          data.map(item => (\n            <MenuItem key={item.name} value={item.name}>\n              {item.name}\n            </MenuItem>\n          ))}\n      </Select>\n    </FormControl>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}