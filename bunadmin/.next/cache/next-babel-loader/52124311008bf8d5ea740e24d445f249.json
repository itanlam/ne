{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/core/schema/components/EditColumns/DialogTitle.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport React from \"react\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Typography } from \"@material-ui/core\";\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\";\nimport FormatAlignLeftIcon from \"@material-ui/icons/List\";\nimport FormatAlignCenterIcon from \"@material-ui/icons/Code\";\n\nvar styles = function styles(theme) {\n  return createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2)\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500]\n    }\n  });\n};\n\nexport var DialogTitle = withStyles(styles)(_s(function (props) {\n  _s();\n\n  var children = props.children,\n      classes = props.classes,\n      onClick = props.onClick,\n      setMode = props.setMode,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"onClick\", \"setMode\"]);\n\n  var _React$useState = React.useState(\"left\"),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      alignment = _React$useState2[0],\n      setAlignment = _React$useState2[1];\n\n  var handleAlignment = function handleAlignment(_event, newAlignment) {\n    if (newAlignment !== null) {\n      setAlignment(newAlignment);\n    }\n  };\n\n  return __jsx(MuiDialogTitle, _extends({\n    disableTypography: true,\n    className: classes.root\n  }, other, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }), __jsx(Typography, {\n    variant: \"h6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, children), onClick ? __jsx(ToggleButtonGroup, {\n    size: \"small\",\n    exclusive: true,\n    \"aria-label\": \"text alignment\",\n    value: alignment,\n    onChange: handleAlignment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(ToggleButton, {\n    value: \"left\",\n    \"aria-label\": \"left aligned\",\n    onClick: function onClick() {\n      return setMode(\"tree\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, __jsx(FormatAlignLeftIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  })), __jsx(ToggleButton, {\n    value: \"center\",\n    \"aria-label\": \"centered\",\n    onClick: function onClick() {\n      return setMode(\"code\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, __jsx(FormatAlignCenterIcon, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }))) : null);\n}, \"04yEmsupNeO8hjoSxxo4gL2mFYg=\"));","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/core/schema/components/EditColumns/DialogTitle.tsx"],"names":["createStyles","withStyles","React","MuiDialogTitle","Typography","ToggleButton","ToggleButtonGroup","FormatAlignLeftIcon","FormatAlignCenterIcon","styles","theme","root","margin","padding","spacing","closeButton","position","right","top","color","palette","grey","DialogTitle","props","children","classes","onClick","setMode","other","useState","alignment","setAlignment","handleAlignment","_event","newAlignment"],"mappings":"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","sourcesContent":["import {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles\n} from \"@material-ui/core/styles\"\nimport React from \"react\"\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\"\nimport { Typography } from \"@material-ui/core\"\nimport { ToggleButton, ToggleButtonGroup } from \"@material-ui/lab\"\nimport FormatAlignLeftIcon from \"@material-ui/icons/List\"\nimport FormatAlignCenterIcon from \"@material-ui/icons/Code\"\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2)\n    },\n    closeButton: {\n      position: \"absolute\",\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500]\n    }\n  })\n\ninterface DialogTitleProps extends WithStyles<typeof styles> {\n  id: string\n  children: React.ReactNode\n  onClick?: () => void\n  setMode: (arg0: string) => void\n}\n\nexport const DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n  const { children, classes, onClick, setMode, ...other } = props\n  const [alignment, setAlignment] = React.useState(\"left\")\n\n  const handleAlignment = (\n    _event: React.MouseEvent<HTMLElement>,\n    newAlignment: string | null\n  ) => {\n    if (newAlignment !== null) {\n      setAlignment(newAlignment)\n    }\n  }\n\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClick ? (\n        <ToggleButtonGroup\n          size=\"small\"\n          exclusive\n          aria-label=\"text alignment\"\n          value={alignment}\n          onChange={handleAlignment}\n        >\n          <ToggleButton\n            value=\"left\"\n            aria-label=\"left aligned\"\n            onClick={() => setMode(\"tree\")}\n          >\n            <FormatAlignLeftIcon />\n          </ToggleButton>\n          <ToggleButton\n            value=\"center\"\n            aria-label=\"centered\"\n            onClick={() => setMode(\"code\")}\n          >\n            <FormatAlignCenterIcon />\n          </ToggleButton>\n        </ToggleButtonGroup>\n      ) : null}\n    </MuiDialogTitle>\n  )\n})\n"]},"metadata":{},"sourceType":"module"}