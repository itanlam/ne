{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/layouts/DefaultLayout/TopBar/TopBarRightMenu/I18nMenu.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport EvaIcon from \"react-eva-icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useTranslation } from \"react-i18next\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { i18nMenus } from \"@/utils/i18n\";\nimport rxDb from \"@/utils/database/rxConnect\";\nimport { Collection as Setting, SettingNames } from \"@/core/setting/collections\";\nexport default function I18nMenu() {\n  _s();\n\n  var _this = this;\n\n  var _useTranslation = useTranslation(),\n      i18n = _useTranslation.i18n;\n\n  var theme = useTheme();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var open = Boolean(anchorEl);\n\n  var _useState = useState(),\n      curCode = _useState[0],\n      setCurCode = _useState[1];\n\n  useEffect(function () {\n    ;\n\n    _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var db, setting, resI18nCode;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return rxDb();\n\n            case 2:\n              db = _context.sent;\n              setting = db[Setting.name];\n              _context.next = 6;\n              return setting.findOne({\n                name: {\n                  $eq: SettingNames.i18n_code\n                }\n              }).exec();\n\n            case 6:\n              resI18nCode = _context.sent;\n              if (resI18nCode) setCurCode(resI18nCode.value);\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }))();\n  }, []);\n\n  var handleMenu = function handleMenu(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleI18n = function handleI18n(_ref2) {\n    var code = _ref2.code;\n    i18n.changeLanguage(code).then( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var db;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return rxDb();\n\n            case 2:\n              db = _context2.sent;\n              _context2.next = 5;\n              return db[Setting.name].upsert({\n                name: SettingNames.i18n_code,\n                value: code\n              });\n\n            case 5:\n              setCurCode(code);\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })));\n    handleClose();\n  };\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  return (// Setting Icon\n    __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, __jsx(IconButton, {\n      \"aria-label\": \"account of current user\",\n      \"aria-controls\": \"menu-appbar\",\n      \"aria-haspopup\": \"true\",\n      onClick: handleMenu,\n      color: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, __jsx(EvaIcon, {\n      name: \"globe-outline\",\n      size: \"large\",\n      fill: theme.bunadmin.iconColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    })), __jsx(Menu, {\n      id: \"menu-appbar\",\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      keepMounted: true,\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      open: open,\n      onClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, i18nMenus.map(function (item, index) {\n      return __jsx(ListItem, {\n        key: index,\n        button: true,\n        onClick: function onClick() {\n          return handleI18n({\n            code: item.code\n          });\n        },\n        selected: item.code === curCode,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, __jsx(ListItemText, {\n        color: \"red\",\n        primary: item.name,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }));\n    })))\n  );\n}\n\n_s(I18nMenu, \"K1BadEaGNMSq6TUA6tgE8SbB2Zs=\", false, function () {\n  return [useTranslation, useTheme];\n});\n\n_c = I18nMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"I18nMenu\");","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/layouts/DefaultLayout/TopBar/TopBarRightMenu/I18nMenu.tsx"],"names":["React","useEffect","useState","IconButton","Menu","EvaIcon","useTheme","useTranslation","ListItem","ListItemText","i18nMenus","rxDb","Collection","Setting","SettingNames","I18nMenu","i18n","theme","anchorEl","setAnchorEl","open","Boolean","curCode","setCurCode","db","setting","name","findOne","$eq","i18n_code","exec","resI18nCode","value","handleMenu","event","currentTarget","handleI18n","code","changeLanguage","then","upsert","handleClose","bunadmin","iconColor","vertical","horizontal","map","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\n\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Menu from \"@material-ui/core/Menu\"\nimport EvaIcon from \"react-eva-icons\"\nimport { useTheme } from \"@material-ui/core/styles\"\nimport { useTranslation } from \"react-i18next\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport { i18nMenus } from \"@/utils/i18n\"\nimport rxDb from \"@/utils/database/rxConnect\"\nimport { Collection as Setting, SettingNames } from \"@/core/setting/collections\"\n\nexport default function I18nMenu() {\n  const { i18n } = useTranslation()\n  const theme = useTheme()\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n  const open = Boolean(anchorEl)\n  const [curCode, setCurCode] = useState<string>()\n\n  useEffect(() => {\n    ;(async () => {\n      const db = await rxDb()\n      const setting = db[Setting.name]\n      const resI18nCode = await setting\n        .findOne({ name: { $eq: SettingNames.i18n_code } })\n        .exec()\n      if (resI18nCode) setCurCode(resI18nCode.value)\n    })()\n  }, [])\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleI18n = ({ code }: { code: string }) => {\n    i18n.changeLanguage(code).then(async () => {\n      // update setting i18n_code\n      const db = await rxDb()\n      await db[Setting.name].upsert({\n        name: SettingNames.i18n_code,\n        value: code\n      })\n      setCurCode(code)\n    })\n    handleClose()\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n\n  return (\n    // Setting Icon\n    <div>\n      <IconButton\n        aria-label=\"account of current user\"\n        aria-controls=\"menu-appbar\"\n        aria-haspopup=\"true\"\n        onClick={handleMenu}\n        color=\"inherit\"\n      >\n        <EvaIcon\n          name=\"globe-outline\"\n          size=\"large\"\n          fill={theme.bunadmin.iconColor}\n        />\n      </IconButton>\n      <Menu\n        id=\"menu-appbar\"\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        keepMounted\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        open={open}\n        onClose={handleClose}\n      >\n        {i18nMenus.map((item, index) => (\n          <ListItem\n            key={index}\n            button\n            onClick={() => handleI18n({ code: item.code })}\n            selected={item.code === curCode}\n          >\n            <ListItemText color={\"red\"} primary={item.name} />\n          </ListItem>\n        ))}\n      </Menu>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}