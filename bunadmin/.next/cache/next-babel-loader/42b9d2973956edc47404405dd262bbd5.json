{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/components/CommonDialog/UploadCustomDialog.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\nexport default function UploadConfirmDialog(_ref) {\n  _s();\n\n  var openModal = _ref.openModal,\n      title = _ref.title,\n      msg = _ref.msg,\n      onChange = _ref.onChange,\n      accept = _ref.accept;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var theme = useTheme();\n  var fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  useEffect(function () {\n    if (openModal < 1) return;\n    setOpen(true);\n  }, [openModal]);\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  var handleChange = function handleChange(e) {\n    onChange(e);\n    handleClose();\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, __jsx(Dialog, {\n    fullScreen: fullScreen,\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(DialogTitle, {\n    id: \"responsive-dialog-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, title), __jsx(DialogContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, __jsx(DialogContentText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, msg)), __jsx(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    autoFocus: true,\n    onClick: handleClose,\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Close\"), __jsx(\"input\", {\n    hidden: true,\n    accept: accept || \"*\",\n    id: \"icon-button-file\",\n    type: \"file\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"icon-button-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    color: \"primary\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Agree\")))));\n}\n\n_s(UploadConfirmDialog, \"9SikCkOaWqIYYBzOn8fM7b6s9p0=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n\n_c = UploadConfirmDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadConfirmDialog\");","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/components/CommonDialog/UploadCustomDialog.tsx"],"names":["React","useEffect","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","useMediaQuery","useTheme","UploadConfirmDialog","openModal","title","msg","onChange","accept","useState","open","setOpen","theme","fullScreen","breakpoints","down","handleClose","handleChange","e"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,iBAAP,MAA8B,qCAA9B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,SAASC,QAAT,QAAyB,0BAAzB;AAUA,eAAe,SAASC,mBAAT,OAMD;AAAA;;AAAA,MALZC,SAKY,QALZA,SAKY;AAAA,MAJZC,KAIY,QAJZA,KAIY;AAAA,MAHZC,GAGY,QAHZA,GAGY;AAAA,MAFZC,QAEY,QAFZA,QAEY;AAAA,MADZC,MACY,QADZA,MACY;;AAAA,wBACYf,KAAK,CAACgB,QAAN,CAAe,KAAf,CADZ;AAAA;AAAA,MACLC,IADK;AAAA,MACCC,OADD;;AAEZ,MAAMC,KAAK,GAAGV,QAAQ,EAAtB;AACA,MAAMW,UAAU,GAAGZ,aAAa,CAACW,KAAK,CAACE,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,CAAhC;AAEArB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIU,SAAS,GAAG,CAAhB,EAAmB;AACnBO,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAHQ,EAGN,CAACP,SAAD,CAHM,CAAT;;AAKA,MAAMY,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBL,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,MAAMM,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAA+B;AAClDX,IAAAA,QAAQ,CAACW,CAAD,CAAR;AACAF,IAAAA,WAAW;AACZ,GAHD;;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,UAAU,EAAEH,UADd;AAEE,IAAA,IAAI,EAAEH,IAFR;AAGE,IAAA,OAAO,EAAEM,WAHX;AAIE,uBAAgB,yBAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,MAAC,WAAD;AAAa,IAAA,EAAE,EAAC,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2CX,KAA3C,CANF,EAOE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoBC,GAApB,CADF,CAPF,EAUE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,SAAS,MAAjB;AAAkB,IAAA,OAAO,EAAEU,WAA3B;AAAwC,IAAA,KAAK,EAAC,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAKE;AACE,IAAA,MAAM,MADR;AAEE,IAAA,MAAM,EAAER,MAAM,IAAI,GAFpB;AAGE,IAAA,EAAE,EAAC,kBAHL;AAIE,IAAA,IAAI,EAAC,MAJP;AAKE,IAAA,QAAQ,EAAES,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,EAYE;AAAO,IAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAwB,IAAA,SAAS,EAAC,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAZF,CAVF,CADF,CADF;AAiCD;;GA1DuBd,mB;UAQRD,Q,EACKD,a;;;KATGE,mB","sourcesContent":["import React, { ChangeEventHandler, useEffect } from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\"\nimport { useTheme } from \"@material-ui/core/styles\"\n\ninterface Interface {\n  openModal: number\n  title?: string\n  msg?: string\n  onChange: ChangeEventHandler<any>\n  accept?: string\n}\n\nexport default function UploadConfirmDialog({\n  openModal,\n  title,\n  msg,\n  onChange,\n  accept\n}: Interface) {\n  const [open, setOpen] = React.useState(false)\n  const theme = useTheme()\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"))\n\n  useEffect(() => {\n    if (openModal < 1) return\n    setOpen(true)\n  }, [openModal])\n\n  const handleClose = () => {\n    setOpen(false)\n  }\n\n  const handleChange = (e: React.ChangeEvent<any>) => {\n    onChange(e)\n    handleClose()\n  }\n\n  return (\n    <div>\n      <Dialog\n        fullScreen={fullScreen}\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{msg}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n\n          <input\n            hidden\n            accept={accept || \"*\"}\n            id=\"icon-button-file\"\n            type=\"file\"\n            onChange={handleChange}\n          />\n          <label htmlFor=\"icon-button-file\">\n            <Button color=\"primary\" component=\"span\">\n              Agree\n            </Button>\n          </label>\n        </DialogActions>\n      </Dialog>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}