{"ast":null,"code":"var _jsxFileName = \"/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/layouts/DefaultLayout/TopBar/TopBarRightMenu/I18nMenu.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport EvaIcon from \"react-eva-icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { useTranslation } from \"react-i18next\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { i18nMenus } from \"@/utils/i18n\";\nimport rxDb from \"@/utils/database/rxConnect\";\nimport { Collection as Setting, SettingNames } from \"@/core/setting/collections\";\nexport default function I18nMenu() {\n  const {\n    i18n\n  } = useTranslation();\n  const theme = useTheme();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  const {\n    0: curCode,\n    1: setCurCode\n  } = useState();\n  useEffect(() => {\n    ;\n\n    (async () => {\n      const db = await rxDb();\n      const setting = db[Setting.name];\n      const resI18nCode = await setting.findOne({\n        name: {\n          $eq: SettingNames.i18n_code\n        }\n      }).exec();\n      if (resI18nCode) setCurCode(resI18nCode.value);\n    })();\n  }, []);\n\n  const handleMenu = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleI18n = ({\n    code\n  }) => {\n    i18n.changeLanguage(code).then(async () => {\n      // update setting i18n_code\n      const db = await rxDb();\n      await db[Setting.name].upsert({\n        name: SettingNames.i18n_code,\n        value: code\n      });\n      setCurCode(code);\n    });\n    handleClose();\n  };\n\n  function handleClose() {\n    setAnchorEl(null);\n  }\n\n  return (// Setting Icon\n    __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, __jsx(IconButton, {\n      \"aria-label\": \"account of current user\",\n      \"aria-controls\": \"menu-appbar\",\n      \"aria-haspopup\": \"true\",\n      onClick: handleMenu,\n      color: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, __jsx(EvaIcon, {\n      name: \"globe-outline\",\n      size: \"large\",\n      fill: theme.bunadmin.iconColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    })), __jsx(Menu, {\n      id: \"menu-appbar\",\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      keepMounted: true,\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      open: open,\n      onClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    }, i18nMenus.map((item, index) => __jsx(ListItem, {\n      key: index,\n      button: true,\n      onClick: () => handleI18n({\n        code: item.code\n      }),\n      selected: item.code === curCode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, __jsx(ListItemText, {\n      color: \"red\",\n      primary: item.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    })))))\n  );\n}","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/layouts/DefaultLayout/TopBar/TopBarRightMenu/I18nMenu.tsx"],"names":["React","useEffect","useState","IconButton","Menu","EvaIcon","useTheme","useTranslation","ListItem","ListItemText","i18nMenus","rxDb","Collection","Setting","SettingNames","I18nMenu","i18n","theme","anchorEl","setAnchorEl","open","Boolean","curCode","setCurCode","db","setting","name","resI18nCode","findOne","$eq","i18n_code","exec","value","handleMenu","event","currentTarget","handleI18n","code","changeLanguage","then","upsert","handleClose","bunadmin","iconColor","vertical","horizontal","map","item","index"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\n\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Menu from \"@material-ui/core/Menu\"\nimport EvaIcon from \"react-eva-icons\"\nimport { useTheme } from \"@material-ui/core/styles\"\nimport { useTranslation } from \"react-i18next\"\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemText from \"@material-ui/core/ListItemText\"\nimport { i18nMenus } from \"@/utils/i18n\"\nimport rxDb from \"@/utils/database/rxConnect\"\nimport { Collection as Setting, SettingNames } from \"@/core/setting/collections\"\n\nexport default function I18nMenu() {\n  const { i18n } = useTranslation()\n  const theme = useTheme()\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n  const open = Boolean(anchorEl)\n  const [curCode, setCurCode] = useState<string>()\n\n  useEffect(() => {\n    ;(async () => {\n      const db = await rxDb()\n      const setting = db[Setting.name]\n      const resI18nCode = await setting\n        .findOne({ name: { $eq: SettingNames.i18n_code } })\n        .exec()\n      if (resI18nCode) setCurCode(resI18nCode.value)\n    })()\n  }, [])\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleI18n = ({ code }: { code: string }) => {\n    i18n.changeLanguage(code).then(async () => {\n      // update setting i18n_code\n      const db = await rxDb()\n      await db[Setting.name].upsert({\n        name: SettingNames.i18n_code,\n        value: code\n      })\n      setCurCode(code)\n    })\n    handleClose()\n  }\n\n  function handleClose() {\n    setAnchorEl(null)\n  }\n\n  return (\n    // Setting Icon\n    <div>\n      <IconButton\n        aria-label=\"account of current user\"\n        aria-controls=\"menu-appbar\"\n        aria-haspopup=\"true\"\n        onClick={handleMenu}\n        color=\"inherit\"\n      >\n        <EvaIcon\n          name=\"globe-outline\"\n          size=\"large\"\n          fill={theme.bunadmin.iconColor}\n        />\n      </IconButton>\n      <Menu\n        id=\"menu-appbar\"\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        keepMounted\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        open={open}\n        onClose={handleClose}\n      >\n        {i18nMenus.map((item, index) => (\n          <ListItem\n            key={index}\n            button\n            onClick={() => handleI18n({ code: item.code })}\n            selected={item.code === curCode}\n          >\n            <ListItemText color={\"red\"} primary={item.name} />\n          </ListItem>\n        ))}\n      </Menu>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}