{"ast":null,"code":"/**\n * Remote data controller\n */\nimport request from \"@/utils/scripts/request\";\nimport { ENV } from \"@/utils/config\";\n\nconst dataController = ({\n  query,\n  name\n}) => new Promise(resolve => {\n  request(`/${name}?page=${query.page + 1}&pageSize=${query.pageSize}`, {\n    prefix: ENV.AUTH_URL,\n    method: \"GET\",\n    responseType: \"text\"\n  }).then(result => {\n    const JSONBigInt = require(\"json-bigint\");\n\n    result = JSONBigInt.parse(result);\n    resolve({\n      data: result.data,\n      page: result.page - 1,\n      totalCount: result.total\n    });\n  }).catch(e => {\n    console.error(e);\n  });\n});\n\nexport default dataController;","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/components/CommonSchema/controllers/dataController.tsx"],"names":["request","ENV","dataController","query","name","Promise","resolve","page","pageSize","prefix","AUTH_URL","method","responseType","then","result","JSONBigInt","require","parse","data","totalCount","total","catch","e","console","error"],"mappings":"AAAA;;;AAIA,OAAOA,OAAP,MAAoB,yBAApB;AACA,SAASC,GAAT,QAAoB,gBAApB;;AAOA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KACrB,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AACrBN,EAAAA,OAAO,CAAE,IAAGI,IAAK,SAAQD,KAAK,CAACI,IAAN,GAAa,CAAE,aAAYJ,KAAK,CAACK,QAAS,EAA5D,EAA+D;AACpEC,IAAAA,MAAM,EAAER,GAAG,CAACS,QADwD;AAEpEC,IAAAA,MAAM,EAAE,KAF4D;AAGpEC,IAAAA,YAAY,EAAE;AAHsD,GAA/D,CAAP,CAKGC,IALH,CAKQC,MAAM,IAAI;AACd,UAAMC,UAAU,GAAGC,OAAO,CAAC,aAAD,CAA1B;;AACAF,IAAAA,MAAM,GAAGC,UAAU,CAACE,KAAX,CAAiBH,MAAjB,CAAT;AAEAR,IAAAA,OAAO,CAAC;AACNY,MAAAA,IAAI,EAAEJ,MAAM,CAACI,IADP;AAENX,MAAAA,IAAI,EAAEO,MAAM,CAACP,IAAP,GAAc,CAFd;AAGNY,MAAAA,UAAU,EAAEL,MAAM,CAACM;AAHb,KAAD,CAAP;AAKD,GAdH,EAeGC,KAfH,CAeSC,CAAC,IAAI;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD,GAjBH;AAkBD,CAnBD,CADF;;AAsBA,eAAepB,cAAf","sourcesContent":["/**\n * Remote data controller\n */\nimport { Query, QueryResult } from \"material-table\"\nimport request from \"@/utils/scripts/request\"\nimport { ENV } from \"@/utils/config\"\n\ninterface Props {\n  query: Query<any>\n  name: string\n}\n\nconst dataController = ({ query, name }: Props) =>\n  new Promise(resolve => {\n    request(`/${name}?page=${query.page + 1}&pageSize=${query.pageSize}`, {\n      prefix: ENV.AUTH_URL,\n      method: \"GET\",\n      responseType: \"text\"\n    })\n      .then(result => {\n        const JSONBigInt = require(\"json-bigint\")\n        result = JSONBigInt.parse(result)\n\n        resolve({\n          data: result.data,\n          page: result.page - 1,\n          totalCount: result.total\n        })\n      })\n      .catch(e => {\n        console.error(e)\n      })\n  }) as Promise<QueryResult<any>>\n\nexport default dataController\n"]},"metadata":{},"sourceType":"module"}