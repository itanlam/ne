{"ast":null,"code":"import requirePlugins from \"@/utils/scripts/requirePlugins\";\nimport { i18nCodes } from \"@/utils/i18n\";\nexport default function addResource({\n  i18n,\n  team,\n  group\n}) {\n  Object.keys(i18nCodes).map(lan => {\n    const lang = requirePlugins(`${team}-${group}/utils/i18n/${lan}`);\n    if (!lang) return;\n    lang.plugins && i18n.addResourceBundle(lan, \"plugins\", lang.plugins, true, true);\n    lang.table && i18n.addResourceBundle(lan, \"table\", lang.table, true, true);\n  });\n}","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/utils/scripts/addResource.tsx"],"names":["requirePlugins","i18nCodes","addResource","i18n","team","group","Object","keys","map","lan","lang","plugins","addResourceBundle","table"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,gCAA3B;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,eAAe,SAASC,WAAT,CAAqB;AAClCC,EAAAA,IADkC;AAElCC,EAAAA,IAFkC;AAGlCC,EAAAA;AAHkC,CAArB,EAQZ;AACDC,EAAAA,MAAM,CAACC,IAAP,CAAYN,SAAZ,EAAuBO,GAAvB,CAA2BC,GAAG,IAAI;AAChC,UAAMC,IAAS,GAAGV,cAAc,CAAE,GAAEI,IAAK,IAAGC,KAAM,eAAcI,GAAI,EAApC,CAAhC;AAEA,QAAI,CAACC,IAAL,EAAW;AAEXA,IAAAA,IAAI,CAACC,OAAL,IACER,IAAI,CAACS,iBAAL,CAAuBH,GAAvB,EAA4B,SAA5B,EAAuCC,IAAI,CAACC,OAA5C,EAAqD,IAArD,EAA2D,IAA3D,CADF;AAGAD,IAAAA,IAAI,CAACG,KAAL,IAAcV,IAAI,CAACS,iBAAL,CAAuBH,GAAvB,EAA4B,OAA5B,EAAqCC,IAAI,CAACG,KAA1C,EAAiD,IAAjD,EAAuD,IAAvD,CAAd;AACD,GATD;AAUD","sourcesContent":["import requirePlugins from \"@/utils/scripts/requirePlugins\"\nimport { i18nCodes } from \"@/utils/i18n\"\n\nexport default function addResource({\n  i18n,\n  team,\n  group\n}: {\n  i18n: any\n  team: string\n  group: string\n}) {\n  Object.keys(i18nCodes).map(lan => {\n    const lang: any = requirePlugins(`${team}-${group}/utils/i18n/${lan}`)\n\n    if (!lang) return\n\n    lang.plugins &&\n      i18n.addResourceBundle(lan, \"plugins\", lang.plugins, true, true)\n\n    lang.table && i18n.addResourceBundle(lan, \"table\", lang.table, true, true)\n  })\n}\n"]},"metadata":{},"sourceType":"module"}