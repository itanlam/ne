{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/layouts/DefaultLayout/TopBar/TopBarRightMenu/SettingMenu.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport RxDB from \"rxdb\";\nimport { useRouter } from \"next/router\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport EvaIcon from \"react-eva-icons\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport ConfirmDialog from \"@/components/CommonDialog/ConfirmDialog\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { settingMenus } from \"@/utils/config/settingMenus\";\nimport { DynamicRoute } from \"@/utils/routes\";\nimport { useTranslation } from \"react-i18next\";\nexport default function SettingMenu() {\n  _s();\n\n  var _this = this;\n\n  var _useTranslation = useTranslation(),\n      t = _useTranslation.t;\n\n  var theme = useTheme();\n  var router = useRouter();\n  var _router$query = router.query,\n      qGroup = _router$query.group,\n      qName = _router$query.name;\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var open = Boolean(anchorEl);\n\n  var _useState = useState({\n    open: 0,\n    title: \"\",\n    msg: \"\"\n  }),\n      modalState = _useState[0],\n      setModalState = _useState[1];\n\n  var handleMenu = function handleMenu(event) {\n    setAnchorEl(event.currentTarget);\n  };\n\n  var handleClose = function handleClose(_ref) {\n    var route = _ref.route;\n    setAnchorEl(null);\n    if (!route) return;\n    router.push(DynamicRoute, route).then(function (_r) {});\n  };\n\n  var handleClearDb = function handleClearDb() {\n    setAnchorEl(null);\n    setModalState({\n      title: \"Delete Local Database\",\n      open: modalState.open + 1,\n      msg: \"Do want to delete the local database?\"\n    });\n  };\n\n  return (// Setting Icon\n    __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }\n    }, __jsx(IconButton, {\n      \"aria-label\": \"account of current user\",\n      \"aria-controls\": \"menu-appbar\",\n      \"aria-haspopup\": \"true\",\n      onClick: handleMenu,\n      color: \"inherit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, __jsx(EvaIcon, {\n      name: \"settings-outline\",\n      size: \"large\",\n      fill: theme.bunadmin.iconColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    })), __jsx(Menu, {\n      id: \"menu-appbar\",\n      anchorEl: anchorEl,\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      keepMounted: true,\n      transformOrigin: {\n        vertical: \"top\",\n        horizontal: \"right\"\n      },\n      open: open,\n      onClose: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, settingMenus({\n      theme: theme\n    }).map(function (item, index) {\n      return __jsx(MenuItem, {\n        key: index,\n        selected: item.route === \"/\".concat(qGroup, \"/\").concat(qName),\n        onClick: function onClick() {\n          return handleClose({\n            route: item.route\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, t(item.name));\n    }), __jsx(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), __jsx(MenuItem, {\n      onClick: function onClick() {\n        return handleClearDb();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, t(\"Reset Local Database\"))), __jsx(ConfirmDialog, {\n      openModal: modalState.open,\n      title: modalState.title,\n      msg: modalState.msg,\n      doFunc: function doFunc() {\n        RxDB.removeDatabase(\"bunadmin\", \"idb\").then(function (_r) {\n          return location.reload();\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }))\n  );\n}\n\n_s(SettingMenu, \"gvkmcwI8tsv0Xn90oMLlozV8sNk=\", false, function () {\n  return [useTranslation, useTheme, useRouter];\n});\n\n_c = SettingMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"SettingMenu\");","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/layouts/DefaultLayout/TopBar/TopBarRightMenu/SettingMenu.tsx"],"names":["React","useState","RxDB","useRouter","IconButton","MenuItem","Menu","EvaIcon","useTheme","ConfirmDialog","Divider","settingMenus","DynamicRoute","useTranslation","SettingMenu","t","theme","router","query","qGroup","group","qName","name","anchorEl","setAnchorEl","open","Boolean","title","msg","modalState","setModalState","handleMenu","event","currentTarget","handleClose","route","push","then","_r","handleClearDb","bunadmin","iconColor","vertical","horizontal","map","item","index","removeDatabase","location","reload"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport RxDB from \"rxdb\"\n\nimport { useRouter } from \"next/router\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport MenuItem from \"@material-ui/core/MenuItem\"\nimport Menu from \"@material-ui/core/Menu\"\nimport EvaIcon from \"react-eva-icons\"\nimport { useTheme } from \"@material-ui/core/styles\"\nimport ConfirmDialog from \"@/components/CommonDialog/ConfirmDialog\"\nimport Divider from \"@material-ui/core/Divider\"\nimport { settingMenus } from \"@/utils/config/settingMenus\"\nimport { DynamicRoute } from \"@/utils/routes\"\nimport { useTranslation } from \"react-i18next\"\n\nexport default function SettingMenu() {\n  const { t } = useTranslation()\n  const theme = useTheme()\n  const router = useRouter()\n  const { group: qGroup, name: qName } = router.query\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null)\n  const open = Boolean(anchorEl)\n  const [modalState, setModalState] = useState({\n    open: 0,\n    title: \"\",\n    msg: \"\"\n  })\n\n  const handleMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = ({ route }: { route: string }) => {\n    setAnchorEl(null)\n    if (!route) return\n    router.push(DynamicRoute, route).then(_r => {})\n  }\n\n  const handleClearDb = () => {\n    setAnchorEl(null)\n    setModalState({\n      title: \"Delete Local Database\",\n      open: modalState.open + 1,\n      msg: \"Do want to delete the local database?\"\n    })\n  }\n\n  return (\n    // Setting Icon\n    <div>\n      <IconButton\n        aria-label=\"account of current user\"\n        aria-controls=\"menu-appbar\"\n        aria-haspopup=\"true\"\n        onClick={handleMenu}\n        color=\"inherit\"\n      >\n        <EvaIcon\n          name=\"settings-outline\"\n          size=\"large\"\n          fill={theme.bunadmin.iconColor}\n        />\n      </IconButton>\n      <Menu\n        id=\"menu-appbar\"\n        anchorEl={anchorEl}\n        anchorOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        keepMounted\n        transformOrigin={{\n          vertical: \"top\",\n          horizontal: \"right\"\n        }}\n        open={open}\n        onClose={handleClose}\n      >\n        {settingMenus({ theme }).map((item, index) => (\n          <MenuItem\n            key={index}\n            selected={item.route === `/${qGroup}/${qName}`}\n            onClick={() => handleClose({ route: item.route })}\n          >\n            {t(item.name)}\n          </MenuItem>\n        ))}\n        {/* ClearDb */}\n        <Divider />\n        <MenuItem onClick={() => handleClearDb()}>\n          {t(\"Reset Local Database\")}\n        </MenuItem>\n      </Menu>\n      {/* ConfirmDialog */}\n      <ConfirmDialog\n        openModal={modalState.open}\n        title={modalState.title}\n        msg={modalState.msg}\n        doFunc={() => {\n          RxDB.removeDatabase(\"bunadmin\", \"idb\").then(_r => location.reload())\n        }}\n      />\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}