{"ast":null,"code":"var _jsxFileName = \"/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/components/Link.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\nimport clsx from \"clsx\";\nimport { useRouter } from \"next/router\";\nimport NextLink from \"next/link\";\nimport MuiLink from \"@material-ui/core/Link\";\nconst NextComposed = React.forwardRef((props, ref) => {\n  const {\n    as,\n    href,\n    replace,\n    scroll,\n    passHref,\n    shallow,\n    prefetch\n  } = props,\n        other = _objectWithoutProperties(props, [\"as\", \"href\", \"replace\", \"scroll\", \"passHref\", \"shallow\", \"prefetch\"]);\n\n  return __jsx(NextLink, {\n    href: href,\n    prefetch: prefetch,\n    as: as,\n    replace: replace,\n    scroll: scroll,\n    shallow: shallow,\n    passHref: passHref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", _extends({\n    ref: ref\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  })));\n});\n\n// A styled version of the Next.js Link component:\n// https://nextjs.org/docs/#with-link\nfunction Link(props) {\n  const {\n    href,\n    activeClassName = \"active\",\n    className: classNameProps,\n    innerRef,\n    naked\n  } = props,\n        other = _objectWithoutProperties(props, [\"href\", \"activeClassName\", \"className\", \"innerRef\", \"naked\"]);\n\n  const router = useRouter();\n  const pathname = typeof href === \"string\" ? href : href.pathname;\n  const className = clsx(classNameProps, {\n    [activeClassName]: router.pathname === pathname && activeClassName\n  });\n\n  if (naked) {\n    return __jsx(NextComposed, _extends({\n      className: className,\n      ref: innerRef,\n      href: href\n    }, other, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return __jsx(MuiLink, _extends({\n    component: NextComposed,\n    className: className,\n    ref: innerRef,\n    href: href\n  }, other, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default React.forwardRef((props, ref) => __jsx(Link, _extends({}, props, {\n  innerRef: ref,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 3\n  }\n})));","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/components/Link.tsx"],"names":["React","clsx","useRouter","NextLink","MuiLink","NextComposed","forwardRef","props","ref","as","href","replace","scroll","passHref","shallow","prefetch","other","Link","activeClassName","className","classNameProps","innerRef","naked","router","pathname"],"mappings":";;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,QAAP,MAAqD,WAArD;AACA,OAAOC,OAAP,MAAmD,wBAAnD;AAQA,MAAMC,YAAY,GAAGL,KAAK,CAACM,UAAN,CACnB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AACd,QAAM;AACJC,IAAAA,EADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,OAHI;AAIJC,IAAAA,MAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA,OANI;AAOJC,IAAAA;AAPI,MASFR,KATJ;AAAA,QAQKS,KARL,4BASIT,KATJ;;AAWA,SACE,MAAC,QAAD;AACE,IAAA,IAAI,EAAEG,IADR;AAEE,IAAA,QAAQ,EAAEK,QAFZ;AAGE,IAAA,EAAE,EAAEN,EAHN;AAIE,IAAA,OAAO,EAAEE,OAJX;AAKE,IAAA,MAAM,EAAEC,MALV;AAME,IAAA,OAAO,EAAEE,OANX;AAOE,IAAA,QAAQ,EAAED,QAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASE;AAAG,IAAA,GAAG,EAAEL;AAAR,KAAiBQ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KATF,CADF;AAaD,CA1BkB,CAArB;;AAuCA;AACA;AACA,SAASC,IAAT,CAAcV,KAAd,EAAgC;AAC9B,QAAM;AACJG,IAAAA,IADI;AAEJQ,IAAAA,eAAe,GAAG,QAFd;AAGJC,IAAAA,SAAS,EAAEC,cAHP;AAIJC,IAAAA,QAJI;AAKJC,IAAAA;AALI,MAOFf,KAPJ;AAAA,QAMKS,KANL,4BAOIT,KAPJ;;AASA,QAAMgB,MAAM,GAAGrB,SAAS,EAAxB;AACA,QAAMsB,QAAQ,GAAG,OAAOd,IAAP,KAAgB,QAAhB,GAA2BA,IAA3B,GAAkCA,IAAI,CAACc,QAAxD;AACA,QAAML,SAAS,GAAGlB,IAAI,CAACmB,cAAD,EAAiB;AACrC,KAACF,eAAD,GAAmBK,MAAM,CAACC,QAAP,KAAoBA,QAApB,IAAgCN;AADd,GAAjB,CAAtB;;AAIA,MAAII,KAAJ,EAAW;AACT,WACE,MAAC,YAAD;AACE,MAAA,SAAS,EAAEH,SADb;AAEE,MAAA,GAAG,EAAEE,QAFP;AAGE,MAAA,IAAI,EAAEX;AAHR,OAIMM,KAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAQD;;AAED,SACE,MAAC,OAAD;AACE,IAAA,SAAS,EAAEX,YADb;AAEE,IAAA,SAAS,EAAEc,SAFb;AAGE,IAAA,GAAG,EAAEE,QAHP;AAIE,IAAA,IAAI,EAAEX;AAJR,KAKMM,KALN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AASD;;AAED,eAAehB,KAAK,CAACM,UAAN,CAA+C,CAACC,KAAD,EAAQC,GAAR,KAC5D,MAAC,IAAD,eAAUD,KAAV;AAAiB,EAAA,QAAQ,EAAEC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADa,CAAf","sourcesContent":["import * as React from \"react\"\nimport clsx from \"clsx\"\nimport { useRouter } from \"next/router\"\nimport NextLink, { LinkProps as NextLinkProps } from \"next/link\"\nimport MuiLink, { LinkProps as MuiLinkProps } from \"@material-ui/core/Link\"\n\ntype NextComposedProps = Omit<\n  React.AnchorHTMLAttributes<HTMLAnchorElement>,\n  \"href\"\n> &\n  NextLinkProps\n\nconst NextComposed = React.forwardRef<HTMLAnchorElement, NextComposedProps>(\n  (props, ref) => {\n    const {\n      as,\n      href,\n      replace,\n      scroll,\n      passHref,\n      shallow,\n      prefetch,\n      ...other\n    } = props\n\n    return (\n      <NextLink\n        href={href}\n        prefetch={prefetch}\n        as={as}\n        replace={replace}\n        scroll={scroll}\n        shallow={shallow}\n        passHref={passHref}\n      >\n        <a ref={ref} {...other} />\n      </NextLink>\n    )\n  }\n)\n\ninterface LinkPropsBase {\n  activeClassName?: string\n  innerRef?: React.Ref<HTMLAnchorElement>\n  naked?: boolean\n}\n\nexport type LinkProps = LinkPropsBase &\n  NextComposedProps &\n  Omit<MuiLinkProps, \"href\">\n\n// A styled version of the Next.js Link component:\n// https://nextjs.org/docs/#with-link\nfunction Link(props: LinkProps) {\n  const {\n    href,\n    activeClassName = \"active\",\n    className: classNameProps,\n    innerRef,\n    naked,\n    ...other\n  } = props\n\n  const router = useRouter()\n  const pathname = typeof href === \"string\" ? href : href.pathname\n  const className = clsx(classNameProps, {\n    [activeClassName]: router.pathname === pathname && activeClassName\n  })\n\n  if (naked) {\n    return (\n      <NextComposed\n        className={className}\n        ref={innerRef}\n        href={href}\n        {...other}\n      />\n    )\n  }\n\n  return (\n    <MuiLink\n      component={NextComposed}\n      className={className}\n      ref={innerRef}\n      href={href as string}\n      {...other}\n    />\n  )\n}\n\nexport default React.forwardRef<HTMLAnchorElement, LinkProps>((props, ref) => (\n  <Link {...props} innerRef={ref} />\n))\n"]},"metadata":{},"sourceType":"module"}