{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Collection as Auth } from \"@/core/auth/collections\";\nimport { Collection as Setting } from \"@/core/setting/collections\";\nimport rxDb from \"@/utils/database/rxConnect\";\nimport { Primary } from \"@/core/auth/schema\";\nexport default function storedToken() {\n  return _storedToken.apply(this, arguments);\n}\n\nfunction _storedToken() {\n  _storedToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var authStore, setting, db, settingRes, username, localUser;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            authStore = Auth.name;\n            setting = Setting.name;\n            _context.next = 4;\n            return rxDb();\n\n          case 4:\n            db = _context.sent;\n            _context.next = 7;\n            return db[setting].findOne().where(\"name\").eq(Primary).exec();\n\n          case 7:\n            settingRes = _context.sent;\n            username = settingRes && settingRes.value || \"\"; // query user from auth_store\n\n            _context.next = 11;\n            return db[authStore].findOne().where(Primary).eq(username).exec();\n\n          case 11:\n            localUser = _context.sent;\n            return _context.abrupt(\"return\", localUser && localUser.token);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _storedToken.apply(this, arguments);\n}","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/utils/scripts/storedToken.tsx"],"names":["Collection","Auth","Setting","rxDb","Primary","storedToken","authStore","name","setting","db","findOne","where","eq","exec","settingRes","username","value","localUser","token"],"mappings":";;AAAA,SAASA,UAAU,IAAIC,IAAvB,QAAmC,yBAAnC;AACA,SAASD,UAAU,IAAIE,OAAvB,QAAsC,4BAAtC;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AAEA,wBAA8BC,WAA9B;AAAA;AAAA;;;0EAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AACPC,YAAAA,SADO,GACKL,IAAI,CAACM,IADV;AAEPC,YAAAA,OAFO,GAEGN,OAAO,CAACK,IAFX;AAAA;AAAA,mBAGIJ,IAAI,EAHR;;AAAA;AAGPM,YAAAA,EAHO;AAAA;AAAA,mBAMYA,EAAE,CAACD,OAAD,CAAF,CACtBE,OADsB,GAEtBC,KAFsB,CAEhB,MAFgB,EAGtBC,EAHsB,CAGnBR,OAHmB,EAItBS,IAJsB,EANZ;;AAAA;AAMPC,YAAAA,UANO;AAWPC,YAAAA,QAXO,GAWKD,UAAU,IAAIA,UAAU,CAACE,KAA1B,IAAoC,EAXxC,EAab;;AAba;AAAA,mBAcWP,EAAE,CAACH,SAAD,CAAF,CACrBI,OADqB,GAErBC,KAFqB,CAEfP,OAFe,EAGrBQ,EAHqB,CAGlBG,QAHkB,EAIrBF,IAJqB,EAdX;;AAAA;AAcPI,YAAAA,SAdO;AAAA,6CAoBNA,SAAS,IAAIA,SAAS,CAACC,KApBjB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { Collection as Auth } from \"@/core/auth/collections\"\nimport { Collection as Setting } from \"@/core/setting/collections\"\nimport rxDb from \"@/utils/database/rxConnect\"\nimport { Primary } from \"@/core/auth/schema\"\n\nexport default async function storedToken() {\n  const authStore = Auth.name\n  const setting = Setting.name\n  const db = await rxDb()\n\n  // query username from bunadmin_setting\n  const settingRes = await db[setting]\n    .findOne()\n    .where(\"name\")\n    .eq(Primary)\n    .exec()\n  const username = (settingRes && settingRes.value) || \"\"\n\n  // query user from auth_store\n  const localUser = await db[authStore]\n    .findOne()\n    .where(Primary)\n    .eq(username)\n    .exec()\n\n  return localUser && localUser.token\n}\n"]},"metadata":{},"sourceType":"module"}