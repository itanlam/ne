{"ast":null,"code":"var _jsxFileName = \"/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/layouts/DefaultLayout/LeftMenu/MenuIcon.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport EvaIcon from \"react-eva-icons\";\nimport { createStyles, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Icon } from \"@material-ui/core\";\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    color: theme.bunadmin.iconColor,\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  nested: {\n    paddingLeft: theme.spacing(4)\n  }\n}));\nexport default function MenuIcon({\n  name,\n  icon,\n  icon_type\n}) {\n  const theme = useTheme();\n  const classes = useStyles();\n  if (!icon || !icon_type) return __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 35\n    }\n  }, \"Icon\");\n\n  switch (icon_type) {\n    case \"eva\":\n      return __jsx(EvaIcon, {\n        name: icon,\n        size: \"large\",\n        fill: theme.bunadmin.iconColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      });\n\n    case \"material\":\n      return __jsx(Icon, {\n        fontSize: \"default\",\n        style: {\n          color: theme.bunadmin.iconColor\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }, icon);\n\n    case \"url\":\n      return __jsx(Icon, {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }, __jsx(\"img\", {\n        alt: name,\n        width: 18,\n        height: 18,\n        src: icon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }));\n\n    default:\n      return __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 14\n        }\n      }, \"Icon\");\n  }\n}","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/layouts/DefaultLayout/LeftMenu/MenuIcon.tsx"],"names":["React","EvaIcon","createStyles","makeStyles","useTheme","Icon","useStyles","theme","root","color","bunadmin","iconColor","display","justifyContent","alignItems","nested","paddingLeft","spacing","MenuIcon","name","icon","icon_type","classes"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAOC,OAAP,MAAoB,iBAApB;AACA,SACEC,YADF,EAEEC,UAFF,EAIEC,QAJF,QAKO,0BALP;AAMA,SAASC,IAAT,QAAqB,mBAArB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,IAC3BL,YAAY,CAAC;AACXM,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAEF,KAAK,CAACG,QAAN,CAAeC,SADlB;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,cAAc,EAAE,QAHZ;AAIJC,IAAAA,UAAU,EAAE;AAJR,GADK;AAOXC,EAAAA,MAAM,EAAE;AACNC,IAAAA,WAAW,EAAET,KAAK,CAACU,OAAN,CAAc,CAAd;AADP;AAPG,CAAD,CADc,CAA5B;AAoBA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA;AAAd,CAAlB,EAAoD;AACjE,QAAMd,KAAK,GAAGH,QAAQ,EAAtB;AACA,QAAMkB,OAAO,GAAGhB,SAAS,EAAzB;AAEA,MAAI,CAACc,IAAD,IAAS,CAACC,SAAd,EAAyB,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;;AAEzB,UAAQA,SAAR;AACE,SAAK,KAAL;AACE,aACE,MAAC,OAAD;AAAS,QAAA,IAAI,EAAED,IAAf;AAAqB,QAAA,IAAI,EAAC,OAA1B;AAAkC,QAAA,IAAI,EAAEb,KAAK,CAACG,QAAN,CAAeC,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;;AAGF,SAAK,UAAL;AACE,aACE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAC,SAAf;AAAyB,QAAA,KAAK,EAAE;AAAEF,UAAAA,KAAK,EAAEF,KAAK,CAACG,QAAN,CAAeC;AAAxB,SAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGS,IADH,CADF;;AAKF,SAAK,KAAL;AACE,aACE,MAAC,IAAD;AAAM,QAAA,SAAS,EAAEE,OAAO,CAACd,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,GAAG,EAAEW,IAAV;AAAgB,QAAA,KAAK,EAAE,EAAvB;AAA2B,QAAA,MAAM,EAAE,EAAnC;AAAuC,QAAA,GAAG,EAAEC,IAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;;AAKF;AACE,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAlBJ;AAoBD","sourcesContent":["import React from \"react\"\n\nimport { MenuIcon as MenuIconName, MenuIconType } from \"@/core/menu/types\"\nimport EvaIcon from \"react-eva-icons\"\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  useTheme\n} from \"@material-ui/core/styles\"\nimport { Icon } from \"@material-ui/core\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      color: theme.bunadmin.iconColor,\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    nested: {\n      paddingLeft: theme.spacing(4)\n    }\n  })\n)\n\ninterface Props {\n  name?: string\n  icon: MenuIconName\n  icon_type: MenuIconType\n}\n\nexport default function MenuIcon({ name, icon, icon_type }: Props) {\n  const theme = useTheme()\n  const classes = useStyles()\n\n  if (!icon || !icon_type) return <span>Icon</span>\n\n  switch (icon_type) {\n    case \"eva\":\n      return (\n        <EvaIcon name={icon} size=\"large\" fill={theme.bunadmin.iconColor} />\n      )\n    case \"material\":\n      return (\n        <Icon fontSize=\"default\" style={{ color: theme.bunadmin.iconColor }}>\n          {icon}\n        </Icon>\n      )\n    case \"url\":\n      return (\n        <Icon className={classes.root}>\n          <img alt={name} width={18} height={18} src={icon} />\n        </Icon>\n      )\n    default:\n      return <span>Icon</span>\n  }\n}\n"]},"metadata":{},"sourceType":"module"}