{"ast":null,"code":"import rxDb from \"./rxConnect\";\nexport default async function rxSubscribe({\n  collection,\n  where,\n  sort,\n  callback\n}) {\n  const db = await rxDb();\n  db[collection].find().where(where || {}).sort(sort || {}).$.subscribe(data => {\n    if (!data) return;\n    callback(data);\n  });\n}","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/utils/database/rxSubscribe.tsx"],"names":["rxDb","rxSubscribe","collection","where","sort","callback","db","find","$","subscribe","data"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AASA,eAAe,eAAeC,WAAf,CAA2B;AACxCC,EAAAA,UADwC;AAExCC,EAAAA,KAFwC;AAGxCC,EAAAA,IAHwC;AAIxCC,EAAAA;AAJwC,CAA3B,EAKM;AACnB,QAAMC,EAAE,GAAG,MAAMN,IAAI,EAArB;AACAM,EAAAA,EAAE,CAACJ,UAAD,CAAF,CACGK,IADH,GAEGJ,KAFH,CAESA,KAAK,IAAI,EAFlB,EAGGC,IAHH,CAGQA,IAAI,IAAI,EAHhB,EAIGI,CAJH,CAIKC,SAJL,CAIgBC,IAAD,IAAe;AAC1B,QAAI,CAACA,IAAL,EAAW;AACXL,IAAAA,QAAQ,CAACK,IAAD,CAAR;AACD,GAPH;AAQD","sourcesContent":["import rxDb from \"./rxConnect\"\n\ninterface RxSubscribeProps {\n  collection: string\n  sort?: any\n  where?: any\n  callback: (data: any) => void\n}\n\nexport default async function rxSubscribe({\n  collection,\n  where,\n  sort,\n  callback\n}: RxSubscribeProps) {\n  const db = await rxDb()\n  db[collection]\n    .find()\n    .where(where || {})\n    .sort(sort || {})\n    .$.subscribe((data: any) => {\n      if (!data) return\n      callback(data)\n    })\n}\n"]},"metadata":{},"sourceType":"module"}