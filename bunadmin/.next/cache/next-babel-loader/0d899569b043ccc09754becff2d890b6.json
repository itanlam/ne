{"ast":null,"code":"import { CoreGroupName } from \"@/utils/routes\";\nimport { notice } from \"@/core\";\nexport function editableController() {\n  async function checkGroup(group) {\n    if (group === CoreGroupName) {\n      // show notice\n      await notice({\n        title: `Created failed`,\n        severity: \"error\",\n        content: \"Group name can't be `core`\"\n      });\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  return {\n    // isEditable: rowData => rowData.not_editable === true, // only name(a) rows would be editable\n    // isDeletable: rowData => rowData.not_deletable === true, // only name(a) rows would be deletable\n    onRowAdd: newData => new Promise(async resolve => {\n      // check group\n      if (await checkGroup(newData.group)) {\n        return resolve();\n      }\n\n      resolve();\n    }),\n    onRowUpdate: newData => new Promise(async resolve => {\n      // check group\n      if (await checkGroup(newData.group)) {\n        return resolve();\n      }\n\n      resolve();\n    }),\n    onRowDelete: () => new Promise(async resolve => {\n      resolve();\n    })\n  };\n}","map":{"version":3,"sources":["/Volumes/Untitled/GitHub/itanlam/ne/bunadmin/src/components/CommonSchema/controllers/editableController.tsx"],"names":["CoreGroupName","notice","editableController","checkGroup","group","title","severity","content","onRowAdd","newData","Promise","resolve","onRowUpdate","onRowDelete"],"mappings":"AACA,SAASA,aAAT,QAA8B,gBAA9B;AACA,SAASC,MAAT,QAAuB,QAAvB;AAEA,OAAO,SAASC,kBAAT,GAAqD;AAC1D,iBAAeC,UAAf,CAA0BC,KAA1B,EAAyC;AACvC,QAAIA,KAAK,KAAKJ,aAAd,EAA6B;AAC3B;AACA,YAAMC,MAAM,CAAC;AACXI,QAAAA,KAAK,EAAG,gBADG;AAEXC,QAAAA,QAAQ,EAAE,OAFC;AAGXC,QAAAA,OAAO,EAAE;AAHE,OAAD,CAAZ;AAKA,aAAO,IAAP;AACD,KARD,MAQO;AACL,aAAO,KAAP;AACD;AACF;;AAED,SAAO;AACL;AACA;AACAC,IAAAA,QAAQ,EAAEC,OAAO,IACf,IAAIC,OAAJ,CAAY,MAAMC,OAAN,IAAiB;AAC3B;AACA,UAAI,MAAMR,UAAU,CAACM,OAAO,CAACL,KAAT,CAApB,EAAqC;AACnC,eAAOO,OAAO,EAAd;AACD;;AAEDA,MAAAA,OAAO;AACR,KAPD,CAJG;AAYLC,IAAAA,WAAW,EAAEH,OAAO,IAClB,IAAIC,OAAJ,CAAY,MAAMC,OAAN,IAAiB;AAC3B;AACA,UAAI,MAAMR,UAAU,CAACM,OAAO,CAACL,KAAT,CAApB,EAAqC;AACnC,eAAOO,OAAO,EAAd;AACD;;AAEDA,MAAAA,OAAO;AACR,KAPD,CAbG;AAqBLE,IAAAA,WAAW,EAAE,MACX,IAAIH,OAAJ,CAAY,MAAMC,OAAN,IAAiB;AAC3BA,MAAAA,OAAO;AACR,KAFD;AAtBG,GAAP;AA0BD","sourcesContent":["import { EditableDataType } from \"@/components/CommonTable/models/editable\"\nimport { CoreGroupName } from \"@/utils/routes\"\nimport { notice } from \"@/core\"\n\nexport function editableController(): EditableDataType<any> {\n  async function checkGroup(group: string) {\n    if (group === CoreGroupName) {\n      // show notice\n      await notice({\n        title: `Created failed`,\n        severity: \"error\",\n        content: \"Group name can't be `core`\"\n      })\n      return true\n    } else {\n      return false\n    }\n  }\n\n  return {\n    // isEditable: rowData => rowData.not_editable === true, // only name(a) rows would be editable\n    // isDeletable: rowData => rowData.not_deletable === true, // only name(a) rows would be deletable\n    onRowAdd: newData =>\n      new Promise(async resolve => {\n        // check group\n        if (await checkGroup(newData.group)) {\n          return resolve()\n        }\n\n        resolve()\n      }),\n    onRowUpdate: newData =>\n      new Promise(async resolve => {\n        // check group\n        if (await checkGroup(newData.group)) {\n          return resolve()\n        }\n\n        resolve()\n      }),\n    onRowDelete: () =>\n      new Promise(async resolve => {\n        resolve()\n      })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}